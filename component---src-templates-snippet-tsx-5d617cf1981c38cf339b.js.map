{"version":3,"sources":["webpack://kciter.so/./src/templates/snippet.tsx"],"names":["dayjs","require","data","location","mdx","body","fields","tableOfContents","frontmatter","excerpt","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","href","mainEntityOfPage","author","name","url","description","useEffect","undefined","document","$","each","_","item","attr","slice","text","replace","meta","content","type","JSON","stringify","className","MDXRenderer","tags","comment","comments"],"mappings":"uNAeAA,WAAaC,EAAQ,OAgFrB,UA9EwB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAA0B,EAOpDD,EAAaE,IALhBC,EAFuD,EAEvDA,KAEAC,GAJuD,EAGvDC,gBAHuD,EAIvDD,QACAE,EALuD,EAKvDA,YACAC,EANuD,EAMvDA,QAIIC,EAAOV,IAAMM,EAAOI,MAAMC,OAAO,MAAMC,SACvCC,EAAoB,CACxBC,SAAUN,EAAYO,MACtBC,aAAcN,EACdO,cAAeP,EACfQ,MAAM,GAAIf,EAASgB,KAAOX,EAAYU,MACtCE,iBAAkB,CAChB,QAAS,UACT,MAAOjB,EAASgB,MAElBE,OAAQ,CAAE,QAAS,SAAUC,KAXhB,iBAYbC,IAAKpB,EAASgB,KACdK,YAAaf,EACb,QAAS,cACT,WAAY,sBAkBd,OAfAgB,gBAAU,gBACgBC,WAAbC,UAEXC,KAAE,WACAA,IAAE,kCAAkCC,MAAK,SAACC,EAAGC,GAAU,IAAD,EAC9CZ,EAAI,UAAGS,IAAEG,GAAMC,KAAK,eAAhB,aAAG,EAAsBC,MAAM,GACnCC,EAAON,IAAE,IAAMT,GAClBe,OACAC,QAAQ,IAAK,IAEhBP,IAAEG,GAAMC,KAAK,eAAgBE,WAGhC,IAGD,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEnB,MAAOP,EAAYO,MACnBS,YAAaf,EACb2B,KAAM,CACJ,CACEd,KAAK,yBACLe,QAASrC,IAAMM,EAAOI,MAAMC,OAAO,MAAMC,aAK/C,gBAAC,IAAD,KACE,0BAAQ0B,KAAK,uBACVC,KAAKC,UAAU3B,KAIpB,sBAAI4B,UAAU,cAAcjC,EAAYO,OAExC,wBAAM0B,UAAU,aAAhB,cACczC,IAAMM,EAAOI,MAAMC,OAAO,MAAMC,OAAO,OAGrD,uBAAK6B,UAAU,gBAEb,gBAAC,EAAAC,YAAD,KAAcrC,IAIhB,gBAAC,IAAD,CAAYsC,KAAMnC,EAAYmC,KAAMC,QAASpC,EAAYqC","file":"component---src-templates-snippet-tsx-5d617cf1981c38cf339b.js","sourcesContent":["import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport DefaultTemplate from \"./default\";\nimport SEO from \"@components/SEO\";\nimport dayjs from \"dayjs\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport PostFooter from \"@components/PostFooter\";\nimport RelatedPost from \"@components/RelatedPost\";\nimport TableOfContents from \"@components/TableOfContents\";\nimport { Helmet } from \"react-helmet\";\nimport $ from \"jquery\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\ndayjs.extend(require(\"dayjs/plugin/localizedFormat\"));\n\nconst SnippetTemplate = ({ data, location }: PageProps) => {\n  const {\n    body,\n    tableOfContents,\n    fields,\n    frontmatter,\n    excerpt,\n  } = (data as any).mdx;\n\n  const author = \"Lee Sun-Hyoup\";\n  const date = dayjs(fields.date).locale(\"ko\").format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: `${location.href}${frontmatter.image}`,\n    mainEntityOfPage: {\n      \"@type\": \"WebPage\",\n      \"@id\": location.href,\n    },\n    author: { \"@type\": \"Person\", name: author },\n    url: location.href,\n    description: excerpt,\n    \"@type\": \"BlogPosting\",\n    \"@context\": \"https://schema.org\",\n  };\n\n  useEffect(() => {\n    if (typeof document === undefined) return;\n\n    $(function () {\n      $(\".post-container a.footnote-ref\").each((_, item) => {\n        const href = $(item).attr(\"href\")?.slice(1);\n        const text = $(\"#\" + href)\n          .text()\n          .replace(\"â†©\", \"\");\n\n        $(item).attr(\"data-tooltip\", text);\n      });\n    });\n  }, []);\n\n  return (\n    <DefaultTemplate>\n      <SEO\n        title={frontmatter.title}\n        description={excerpt}\n        meta={[\n          {\n            name: `article:published_time`,\n            content: dayjs(fields.date).locale(\"ko\").format(),\n          },\n        ]}\n      />\n\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(applicationLdJson)}\n        </script>\n      </Helmet>\n\n      <h1 className=\"post-title\">{frontmatter.title}</h1>\n\n      <span className=\"post-date\">\n        Written on {dayjs(fields.date).locale(\"en\").format(\"LL\")}\n      </span>\n\n      <div className=\"post-content\">\n        {/* <MDXProvider> */}\n        <MDXRenderer>{body}</MDXRenderer>\n        {/* </MDXProvider> */}\n      </div>\n\n      <PostFooter tags={frontmatter.tags} comment={frontmatter.comments} />\n    </DefaultTemplate>\n  );\n};\n\nexport default SnippetTemplate;\n\nexport const snippetQuery = graphql`\n  query SnippetBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      tableOfContents\n      excerpt(truncate: true)\n      fields {\n        slug\n        date\n      }\n      frontmatter {\n        title\n        tags\n        image\n        comments\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}