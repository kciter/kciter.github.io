{"componentChunkName":"component---src-templates-post-tsx-content-file-path-src-posts-2024-07-27-tidy-first-mdx","path":"/posts/tidy-first/","result":{"data":{"site":{"siteMetadata":{"title":"kciter.so | devlog"}},"mdx":{"body":"\n이 책은... **매우 얇다**. 그것이 장점이자 단점이다. 장점은 빠르게 읽을 수 있다는 것이고, 단점은 내용이 얕다는 것이다. 이 책을 집필한 켄트 백은 의심할 여지 없이 소프트웨어 업계에선 유명한 인물이다. 그의 저서인 [익스트림 프로그래밍](https://m.yes24.com/Goods/Detail/2126201)과 [테스트 주도 개발](https://m.yes24.com/Goods/Detail/12246033)은 많은 개발자들에게 영감을 주었고, 이 책도 그와 비슷한 영감을 주지 않을까 기대하면서 읽었다.\n\n# 내용\n\n켄트 백은 '**괴짜들이 세상에서 안전하다고 느끼도록 돕는 일**'이 자신의 개인적인 사명이라 한다. 그렇기 때문인지 이 책에선 **안전하게 코딩하는 방법**에 대해 다루고 그것을 Tidy First?, 정리를 할지 판단하는 것으로 가능하다고 주장한다.\n\n책의 내용은 총 세 개 파트로 나뉘는데, 첫 파트는 코드 레벨에서 정리하는 방법을 다루고 있다. 유명한 Gaurd Clause 패턴이나 주석에 대한 자신의 견해, 여러 리팩토링 기법을 설명하며 지저분한 코드를 발견했다면 코드를 정리하라고 주장한다. 주로 리팩토링과 관련된 책에서 자주 볼 수 있는 내용이다.\n\n두 번째 파트는 코드 정리를 언제 하면 좋을지, 설계에 대한 변경을 어떻게 정리할지에 대해 다루고 있다. 켄트 백의 경험에서 우러나오는 정리 시기와 자주 들을 수 있는 결합도와 응집도에 대한 설명을 볼 수 있다.\n\n마지막 파트는 정리를 왜 해야하는가를 다룬다. 여기서 정리에 대한 이야기를 비용에 빗대서 설명하는데, 이전에 [리팩토링의 중요성](https://youtu.be/mNPpfB8JSIU?feature=shared&t=1510)에 대해 **경제성이 리팩토링을 해야하는 유일한 이유**라고 말한 것이 생각났다. 켄트 백은 정리를 미룰수록 변화에 대응하는 비용이 증가할 수 있다고 주장한다.\n\n# 좋았던 점과 아쉬운 점\n\n좋은 점은 켄트 백이 오랫 동안 쌓아온 경험과 가치관을 매우 빠르게 읽을 수 있다는 점이다. 앉은 자리에서 다 읽고 한 번 더 회독하더라도 하루가 걸리지 않을 것이다.\n\n아쉬운 점은 챕터마다 내용이 너무 빈약하다는 것이다. 예를 들어, *챕터 4, 새로운 인터페이스로 기존 루틴 부르기*에서 통로 인터페이스<sup>pass-through interface</sup>라는 용어를 사용하는데, 여기서 말하는 인터페이스가 문법 상 인터페이스를 말하는지, 아니면 단순 함수 명세를 말하는지 알 수가 없다. 이런 부분이 아쉽다. 나만 이렇게 느낀 것이 아닌건지 이에 대해 [질문](https://tidyfirst.substack.com/p/request-for-examples-pass-through/comments)하는 경우도 볼 수 있다.\n\n# 마치며\n\n조금 인상 깊었던 것은 [Structured Design](https://www.amazon.com/Structured-Design-Fundamentals-Discipline-Computer/dp/0138544719)이라는 책이 여러 번 언급되는데, 이 책을 나도 읽었다는 점이다. 켄트 백이 느꼈던 점과 유사하게 **기본은 정확하다**라는 것을 느꼈다. 중요한 가치는 기술이 발전하고 여러 기교가 등장하더라도 변하지 않는다는 것이다.\n\n이 책도 그러한 가치를 담고 있는 책이라고 생각한다. 정리를 먼저 해야하는 이유는 **안전한 코딩을 위해서이며 그것은 경제성으로 이어진다는 것**이 핵심이다. 이런 핵심은 소프트웨어를 제작해서 판매하는 사람이라면 누구나 인정할 수 밖에 없는 기본적인 가치다.\n","tableOfContents":{"items":[{"url":"#내용","title":"내용"},{"url":"#좋았던-점과-아쉬운-점","title":"좋았던 점과 아쉬운 점"},{"url":"#마치며","title":"마치며"}]},"excerpt":"이 책은... 매우 얇다. 그것이 장점이자 단점이다. 장점은 빠르게 읽을 수 있다는 것이고, 단점은 내용이 얕다는 것이다. 이 책을 집필한 켄트 백은 의심할 여지 없이 소프트웨어 업계에선 유명한 인물이다. 그의 저서인 익스트림 프로그래밍과 테스트 주도…","fields":{"slug":"/posts/tidy-first","date":"2024-07-27"},"frontmatter":{"title":"정리부터 먼저 하라구요?","categories":"book-report","tags":[],"image":"/images/2024-07-27-tidy-first/thumbnail.png","comments":true,"draft":false}},"allMdx":{"edges":[{"node":{"fields":{"date":"2022-08-31","slug":"/posts/the-nature-of-software-development-book-report"},"frontmatter":{"title":"우리 팀은 어떻게 일 해야할까?","image":"/images/2022-08-31-the-nature-of-software-development-book-report/thumbnail.png"}}},{"node":{"fields":{"date":"2022-09-08","slug":"/posts/software-master-book-report"},"frontmatter":{"title":"나는 프로답게 일했는가?","image":"/images/2022-09-08-software-master-book-report/thumbnail.png"}}},{"node":{"fields":{"date":"2022-08-05","slug":"/posts/programmers-brain-book-report"},"frontmatter":{"title":"올바른 코드를 위한 끝없는 고찰","image":"/images/2022-08-05-programmers-brain-book-report/thumbnail.png"}}},{"node":{"fields":{"date":"2024-05-10","slug":"/posts/the-shortcut"},"frontmatter":{"title":"기계의 반칙","image":"/images/2024-05-10-the-shortcut/thumbnail.png"}}},{"node":{"fields":{"date":"2024-05-17","slug":"/posts/warp-and-weft"},"frontmatter":{"title":"씨줄과 날줄","image":"/images/2024-05-17-warp-and-weft/thumbnail.png"}}},{"node":{"fields":{"date":"2021-02-23","slug":"/posts/first-post"},"frontmatter":{"title":"첫 포스트를 작성하며","image":"/images/2021-02-23-first-post/mountains.jpg"}}},{"node":{"fields":{"date":"2021-02-25","slug":"/posts/about-mongodb"},"frontmatter":{"title":"MongoDB 이해하기","image":"/images/2021-02-25-about-mongodb/thumbnail.png"}}},{"node":{"fields":{"date":"2021-02-28","slug":"/posts/basic-web-hacking"},"frontmatter":{"title":"웹 개발을 위해 꼭 알아야하는 보안 공격","image":"/images/2021-02-28-basic-web-hacking/thumbnail.png"}}},{"node":{"fields":{"date":"2021-03-14","slug":"/posts/effective-atomic-design"},"frontmatter":{"title":"Effective Atomic Design","image":"/images/2021-03-14-effective-atomic-design/thumbnail.png"}}},{"node":{"fields":{"date":"2021-03-20","slug":"/posts/deep-dive-into-datetime"},"frontmatter":{"title":"시간에 대해 탐구하기","image":"/images/2021-03-20-deep-dive-into-datetime/thumbnail.png"}}},{"node":{"fields":{"date":"2022-08-16","slug":"/posts/polymorphic-react-component"},"frontmatter":{"title":"Polymorphic한 React 컴포넌트 만들기","image":"/images/2022-08-16-polymorphic-react-component/thumbnail.png"}}},{"node":{"fields":{"date":"2022-09-18","slug":"/posts/crafting-esolang"},"frontmatter":{"title":"난해한 프로그래밍 언어 만들어보기","image":"/images/2022-09-18-crafting-esolang/thumbnail.png"}}},{"node":{"fields":{"date":"2023-05-03","slug":"/posts/spring-multi-module-architecture"},"frontmatter":{"title":"IoC와 DI를 이용한 Spring 멀티 모듈 아키텍처","image":"/images/2023-05-03-spring-multi-module-architecture/thumbnail.png"}}},{"node":{"fields":{"date":"2023-07-10","slug":"/posts/effective-work"},"frontmatter":{"title":"갓생사는 방법론","image":"/images/2023-07-10-effective-work/thumbnail.png"}}},{"node":{"fields":{"date":"2023-07-17","slug":"/posts/railway-oriented-programming"},"frontmatter":{"title":"Railway-Oriented Programming","image":"/images/2023-07-17-railway-oriented-programming/thumbnail.png"}}},{"node":{"fields":{"date":"2023-07-24","slug":"/posts/functional-data-structure"},"frontmatter":{"title":"함수형 자료구조","image":"/images/2023-07-24-functional-data-structure/thumbnail.png"}}},{"node":{"fields":{"date":"2023-12-05","slug":"/posts/what-is-beautiful-code"},"frontmatter":{"title":"아름다운 코드에 대하여","image":"/images/2023-12-05-what-is-beautiful-code/thumbnail.png"}}},{"node":{"fields":{"date":"2023-12-24","slug":"/posts/developers-learning-and-growth"},"frontmatter":{"title":"개발자의 학습과 성장","image":"/images/2023-12-24-developers-learning-and-growth/thumbnail.png"}}},{"node":{"fields":{"date":"2024-02-18","slug":"/posts/render-delegation-react-component"},"frontmatter":{"title":"Render Delegation하는 React 컴포넌트 만들기","image":"/images/2024-02-18-render-delegation-react-component/thumbnail.png"}}},{"node":{"fields":{"date":"2024-03-03","slug":"/posts/ascii-3d-renderer"},"frontmatter":{"title":"ASCII 3D 렌더러 만들기","image":"/images/2024-03-03-ascii-3d-renderer/thumbnail.png"}}},{"node":{"fields":{"date":"2024-04-14","slug":"/posts/encrypted-vault-system"},"frontmatter":{"title":"비밀 관리를 위한 금고 시스템 만들기","image":"/images/2024-04-14-encrypted-vault-system/thumbnail.png"}}},{"node":{"fields":{"date":"2024-04-26","slug":"/posts/living-with-ai"},"frontmatter":{"title":"AI와 더불어 살아가기","image":"/images/2024-04-26-living-with-ai/thumbnail.png"}}},{"node":{"fields":{"date":"2024-07-09","slug":"/posts/best-prompt-engineering-lesson"},"frontmatter":{"title":"프롬프트 엔지니어링을 시작한다면","image":"/images/2024-07-09-best-prompt-engineering-lesson/thumbnail.png"}}},{"node":{"fields":{"date":"2024-07-27","slug":"/posts/tidy-first"},"frontmatter":{"title":"정리부터 먼저 하라구요?","image":"/images/2024-07-27-tidy-first/thumbnail.png"}}},{"node":{"fields":{"date":"2024-01-21","slug":"/posts/type-driven-development"},"frontmatter":{"title":"Type-Driven Development","image":"/images/2024-01-21-type-driven-development/thumbnail.png"}}},{"node":{"fields":{"date":"2024-03-16","slug":"/posts/principles-of-debugging"},"frontmatter":{"title":"디버깅 원칙","image":"/images/2024-03-16-principles-of-debugging/thumbnail.png"}}}]}},"pageContext":{"slug":"/posts/tidy-first","frontmatter":{"title":"정리부터 먼저 하라구요?","categories":"book-report","tags":[],"image":"/images/2024-07-27-tidy-first/thumbnail.png","cover":"/images/2024-07-27-tidy-first/cover.jpg","comments":true,"draft":false,"hide":false}}},"staticQueryHashes":["595849736","63159454"],"slicesMap":{}}