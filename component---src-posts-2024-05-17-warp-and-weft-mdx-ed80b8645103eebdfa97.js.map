{"version":3,"file":"component---src-posts-2024-05-17-warp-and-weft-mdx-ed80b8645103eebdfa97.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2024-05-17-warp-and-weft.mdx","webpack://kciter.so/./src/components/Image/index.tsx","webpack://kciter.so/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    sup: \"sup\",\n    strong: \"strong\",\n    section: \"section\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"아무것도 몰라도 타입 검사를 그냥 '사용'할 수는 있다. 하지만 타입 검사를 제대로 '활용'하는 것은 전혀 다른 문제다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"왜-타입이-중요한가\"\n  }, React.createElement(_components.a, {\n    href: \"#왜-타입이-중요한가\"\n  }, \"왜 타입이 중요한가?\")), \"\\n\", React.createElement(_components.p, null, \"아무래도 타입은 프로그래밍을 할 때 가장 많이 고려하는 요소라고 할 수 있다. 우리는 프로그래밍 언어가 제공하는 문법을 통해 입력 데이터를 원하는 결과로 만들어 나간다. 이를 극도로 추상화하면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">입력 -> 출력</code>\"\n    }\n  }), \"이라고 볼 수 있다. 세세하게 바라보면 결국 최종 목적지를 위한 입출력의 연속이라 볼 수 있다. 이 과정에서 데이터의 타입은 계속 바뀐다. 이는 로직마다 관심사\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-1\",\n    id: \"user-content-fnref-1\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"1\")), \"가 달라지기 때문이다. 즉, 입력에서 출력까지의 데이터 흐름에 타입 변화는 항상 따라다니는 짝궁 같은 것이다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2024-05-17-warp-and-weft/logic.png\",\n    caption: \"로직은 입출력의 연속\",\n    width: \"100%\"\n  }), \"\\n\", React.createElement(_components.p, null, \"이 책에서 언급한 것처럼 파이썬이나 자바스크립트와 같은 언어를 사용한다면 타입 검사가 매우 귀찮게 느껴질 수 있지만 개발자에게 \", React.createElement(_components.strong, null, \"막강한 무기\"), \"가 될 수도 있다. \", React.createElement(_components.strong, null, \"타입은 함수와 데이터가 준수해야 하는 엄격한 계약\"), \"이며 타입 시스템은 이를 어길 수 없게 만든다. 까놓고 이야기하면 개발자는 생각보다 실수를 많이 한다. 처음엔 타입 검사가 귀찮고 오히려 생산성만 떨어뜨린다고 느낄 수 있지만, 되돌아가는게 더 빠를 수 있다고 실수를 바로잡는 시간일 생각하면 타입 검사를 하는게 오히려 생산성을 높다고 볼 수 있다.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-2\",\n    id: \"user-content-fnref-2\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"2\"))), \"\\n\", React.createElement(_components.h1, {\n    id: \"일단-개발을-해봤다면-누구나-읽을-수-있는-책\"\n  }, React.createElement(_components.a, {\n    href: \"#일단-개발을-해봤다면-누구나-읽을-수-있는-책\"\n  }, \"일단 개발을 해봤다면 누구나 읽을 수 있는 책\")), \"\\n\", React.createElement(_components.p, null, \"필자도 사실 타입에 대한 이야기를 \", React.createElement(_components.a, {\n    href: \"/posts/type-driven-development\"\n  }, \"Type-Driven Development\"), \" 포스팅을 통해 한 번 다룬적이 있다. 이 글을 쓰던 당시에는 이 책을 읽지 않은 상태였지만, 만약 읽었다면 더 잘 쓸 수 있지 않았을까 싶다. 그만큼 이 책은 타입에 대한 이야기를 쉽게 설명하면서 깊이 있는 내용을 다루고 있다. 그리고 특히 일러스트가 이해하기에 아주 찰떡이다. 이것만 봐도 신경을 많이 쓴 좋은 책이라 생각한다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"씨줄과-날줄\"\n  }, React.createElement(_components.a, {\n    href: \"#씨줄과-날줄\"\n  }, \"씨줄과 날줄\")), \"\\n\", React.createElement(_components.p, null, \"타입 시스템이 왜 필요한가를 생각하면 씨줄과 날줄이라는 표현은 아주 적절하다. \", React.createElement(_components.strong, null, \"타입 시스템의 본분은 개발자가 만드는 프로그램을 안전하게 만드는 것이다.\"), \" 마치 직조하여 씨줄과 날줄을 꼼꼼하게 짜서 튼튼한 천을 만드는 것 처럼, 촘촘한 타입 시스템을 통해 안전한 프로그램을 만들 수 있다. 물론 서두에 쓴 것처럼 그냥 '사용'하는 것과 '활용'하는 것은 다르다. 그래서 타입 시스템이 어떻게 동작하는지, 무엇을 제공하는지 잘알고 사용하는 것이 중요하다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")), \"\\n\", React.createElement(_components.p, null, \"이 책은 개발을 업으로 삼고있다면 한 번쯤은 읽어보면 좋은 책이라고 생각한다. 너무 어렵지도 않으며 읽기 좋게 구성되어 있어 술술 읽을 수 있다. 어떻게보면 기존 타입과 관련된 서적은 함수형과 연관되어 있거나 너무 깊은 내용을 다루는 경우가 많은데, 이 책은 그런 측면에서 좀 더 가볍게 읽을 수 있는 책이라고 생각한다.\"), \"\\n\", React.createElement(_components.section, {\n    \"data-footnotes\": true,\n    className: \"footnotes\"\n  }, React.createElement(_components.h2, {\n    className: \"sr-only\",\n    id: \"footnote-label\"\n  }, React.createElement(_components.a, {\n    href: \"#footnote-label\"\n  }, \"Footnotes\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-1\"\n  }, \"\\n\", React.createElement(_components.p, null, \"여기선 함수나 클래스가 맡은 역할을 말한다 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-1\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-2\"\n  }, \"\\n\", React.createElement(_components.p, null, \"빌드 타임 이야기는 반칙이니까 생략하자 \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-2\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width || '100%'}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","h1","a","span","sup","strong","section","h2","ol","li","_provideComponents","components","React","id","href","dangerouslySetInnerHTML","__html","Image","src","caption","width","className","wrapper","MDXLayout","_ref","maxWidth","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","ReactDOM","position","top","left","height","backgroundColor","borderRadius","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}