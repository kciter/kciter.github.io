{"version":3,"file":"component---src-posts-2025-03-12-build-large-scale-react-web-apps-mdx-1552a59e9d0514e3471f.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2025-03-12-build-large-scale-react-web-apps.mdx","webpack://kciter.so/./src/components/Image/index.tsx","webpack://kciter.so/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    h1: \"h1\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"좋은 기회로 지난 달 출판된 \", React.createElement(_components.a, {\n    href: \"https://product.kyobobook.co.kr/detail/S000215561417\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"대규모 리액트 웹 앱 개발\"), \"에 인생 첫 추천사를 남길 수 있었습니다. 개발자에게 있어 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">대규모</code>\"\n    }\n  }), \"라는 키워드는 굉장히 자극적입니다. 그리고 리액트에 대한 깊은 이해, 잘 사용할 수 있는 방법을 제시하는 책은 많지만 리액트 애플리케이션 설계와 관리에 대한 책은 상대적으로 적습니다. 이 책은 이런 부분을 다루고 있어서 개인적으로 매우 흥미롭게 읽었습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이번 글에서는 추천사를 남겼다는 사심을 빼고 이 책을 읽고 느낀 점을 솔직하게 공유하고자 합니다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2025-03-12-build-large-scale-react-web-apps/foreword.png\",\n    caption: \"추천사 내용 중 일부\",\n    maxWidth: \"400px\"\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"이-책에서-말하는-대규모란-무엇인가\"\n  }, React.createElement(_components.a, {\n    href: \"#이-책에서-말하는-대규모란-무엇인가\"\n  }, \"이 책에서 말하는 대규모란 무엇인가?\")), \"\\n\", React.createElement(_components.p, null, \"프론트엔드에서 대규모라는 표현은 조금 어색하게 느껴질 수 있습니다. 백엔드 서버 개발의 경우 사용자가 많아질수록 서버의 부하가 커지고, 데이터베이스의 크기가 커지는 등 물리적인 측면에서 대규모로 표현할 수 있고 이에 따라 대규모 서버 개발이라는 표현이 자연스럽게 사용됩니다. 하지만 프론트엔드는 사용자가 많아지더라도 브라우저를 사용하는 사용자의 컴퓨터에서 동작하기 때문에 물리적인 측면에서 대규모로 표현하기 어렵습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이 책에서는 복잡성을 중심으로 대규모를 정의합니다. 다만, 단순히 코드양이 많다고 해서 복잡하다고 할 수는 없습니다. 이 책에서 말하는 대규모란 \", React.createElement(_components.strong, null, \"수십 명 이상의 대규모 팀에 의해 개발됐거나 시간이 지남에 따라 계속 진화하는 웹 애플리케이션, 혹은 두 성격을 모두 지닌 애플리케이션\"), \"이 대규모 웹 애플리케이션이라고 합니다. 개인적으로는 이 정의도 좀 애매모호하다고 생각하긴 합니다. 단순히 개발자가 많다고해서 복잡한 것도 아니고 시간이 지나면서 계속 변화하더라도 단순한 서비스로서 유지하고 있는 것도 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"저는 \", React.createElement(_components.strong, null, \"프론트엔드의 복잡성은 협업하는 다른 직군이 많아질 수록 증가\"), \"한다고 생각합니다. 프론트엔드 개발자는 사용자와 만나는 제품을 만들기 때문에 필연적으로 다양한 직군과 협업할 수 밖에 없습니다. 물론 제품에 따라 그 규모는 차이가 있을 수 있지만 프론트엔드 개발자는 다양한 이해관계와 요구사항을 파악하여 마치 작은 PM처럼 다양한 직군과 소통하고 협업해야 합니다. 일종의 접착제 같은 역할을 한다고 할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"많은 사람들의 오해가 있지만 프론트엔드 개발자는 단순히 UI를 보여주고 백엔드 서버와 통신하는 것만 구현하지 않습니다. 사용자와의 복잡한 상호작용, 데이터 수집, 다양한 환경에 대한 처리, 애니메이션, 국제화, 성능 최적화, 웹 접근성, SEO, 디자인 일반화 등 다양한 요구사항을 처리해야 합니다. 그리고 이러한 요구사항은 협업으로 인해 발생하고 그로 인한 \", React.createElement(_components.strong, null, \"하위 시스템이 계속 증가하며 복잡성 또한 증가\"), \"하게 됩니다. 이 책에서는 이런 상황에서 어떻게 리액트 애플리케이션을 설계하고 관리할 수 있는지, 그리고 어떤 것을 고려해야 하는지에 대해 다룹니다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"누가-읽으면-좋은가\"\n  }, React.createElement(_components.a, {\n    href: \"#누가-읽으면-좋은가\"\n  }, \"누가 읽으면 좋은가?\")), \"\\n\", React.createElement(_components.p, null, \"아무래도 설계와 관리라는 것은 실제로 경험하지 않으면 알기 힘든 것이 많습니다. 그렇지만 문제가 있는지도 모르는 것과 문제가 있다는 것을 알고 있는 것은 큰 차이가 있습니다. 이 책은 \", React.createElement(_components.strong, null, \"대규모 웹 앱\"), \"이라는 것을 만들 때 어떤 문제를 마주할 수 있는지 알려줍니다. 만약 여러분이 아직 경험이 없다면 이 책을 통해 미리 문제를 마주하고 고민해보는 것도 좋은 방법이 될 것이라 생각합니다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"살짝-아쉬운-깊이\"\n  }, React.createElement(_components.a, {\n    href: \"#살짝-아쉬운-깊이\"\n  }, \"살짝 아쉬운 깊이\")), \"\\n\", React.createElement(_components.p, null, \"이 책은 각 내용이 단편적으로 구성되어 있습니다. 그래서 각 내용을 깊게 다루지 않고 넘어가는 경우가 많습니다. 다만, 분량상 어쩔 수 없는 부분이라고 느껴집니다. 따라서 책을 읽을 때 지식을 익힌다는 느낌보다는 \", React.createElement(_components.strong, null, \"향후 어떤 문제를 만날 수 있는지 확인한다\"), \"라는 느낌으로 접근하시면 좋습니다. 그리고 그 해결법은 관심있는 경우 별도의 다른 책이나 아티클 등을 통해 깊게 공부해보는 것을 추천합니다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")), \"\\n\", React.createElement(_components.p, null, \"언제나 중요한 것은 '정답을 찾아나가는 방법'을 익히는 것입니다. 제가 추천사에 적은 것처럼 이 책을 읽을 때는 상황을 상상하고, 나라면 문제를 어떻게 해결할지 고민해보시길 바랍니다. 향후 그 고민이 실제로 도움이 되는 순간이 오게 될 것입니다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  console.log(isExpanded);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width || '100%'}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              zIndex: 1000\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <img\n              src={src}\n              width=\"100%\"\n              style={{\n                display: 'block',\n                borderRadius: 8,\n                width: 'auto',\n                height: 'auto',\n                maxWidth: 1440,\n                maxHeight: '80vh',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            />\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","h1","strong","_provideComponents","components","React","href","rel","dangerouslySetInnerHTML","__html","Image","src","caption","maxWidth","id","wrapper","MDXLayout","_ref","width","expandable","isExpanded","toggleExpanded","useState","console","log","___EmotionJSX","style","cursor","onClick","undefined","ReactDOM","position","top","left","height","backgroundColor","zIndex","display","borderRadius","maxHeight","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}