{"version":3,"file":"component---src-pages-post-tsx-2f7a8cbc572aa4d27802.js","mappings":"sPAeAA,IAAAA,OAAaC,EAAQ,OAwHrB,UAtHqBC,IAA0D,IAAzD,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,GAAqBJ,EACxE,MAAM,gBAAEK,EAAe,OAAEC,EAAM,YAAEC,EAAW,QAAEC,GAAaP,EAAaQ,KAElE,OAAEC,GAAWP,EAGbQ,EAAOb,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,SACvCC,EAAoB,CACxBC,SAAUR,EAAYS,MACtBC,aAAcN,EACdO,cAAeP,EACfQ,MAAO,GAAGjB,EAASkB,KAAOb,EAAYY,MACtCE,iBAAkB,CAChB,QAAS,UACT,MAAOnB,EAASkB,MAElBE,OAAQ,CAAE,QAAS,SAAUC,KAXhB,iBAYbC,IAAKtB,EAASkB,KACdK,YAAajB,EACb,QAAS,cACT,WAAY,uBAGdkB,EAAAA,EAAAA,YAAU,UACgBC,WAAbC,UAEXC,KAAE,WACAA,IAAE,wCAAwCC,MAAK,CAACC,EAAGC,KAAS,IAAAC,EAC1D,MAAMb,EAA2B,QAAvBa,EAAGJ,IAAEG,GAAME,KAAK,eAAO,IAAAD,OAAA,EAApBA,EAAsBE,MAAM,GACnCC,EAAOP,IAAE,IAAMT,GAClBgB,OACAC,QAAQ,IAAK,IAEhBR,IAAEG,GAAME,KAAK,eAAgBE,EAAK,GAEtC,GAAE,GACD,IAEH,MAAM,EAACE,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,aAC1Bd,EAAAA,EAAAA,YAAU,KACRa,EACGtC,EAAawC,OAAOC,MAClBC,QAAQX,GAAcA,EAAKY,KAAKtC,OAAOuC,OAASvC,EAAOuC,OACvDC,MAAK,IAAMC,KAAKC,SAAW,KAC3Bb,MAAM,EAAG,GACb,GACA,IAEH,MAAMc,EAAQ1C,EAAY0C,QAASC,EAEnC,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAe,MACdD,EAAAA,EAAAA,GAACE,EAAAA,EAAG,CACFrC,MAAOT,EAAYS,MACnBS,YAAajB,EACb8C,KAAM,CACJ,CACE/B,KAAM,yBACNgC,QAASzD,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,UAE3C,CACEU,KAAM,QACNgC,QAAS,oBAAoBhD,EAAYY,OAE3C,CACEqC,SAAU,WACVD,QAAS,oBAAoBhD,EAAYY,OAE3C,CACEqC,SAAU,sBACVD,QAAS,oBAAoBhD,EAAYY,WAK/CgC,EAAAA,EAAAA,GAACM,EAAAA,EAAM,MACLN,EAAAA,EAAAA,GAAA,UAAQO,KAAK,uBACVC,KAAKC,UAAU9C,MAIpBqC,EAAAA,EAAAA,GAAA,MAAIU,UAAU,cAActD,EAAYS,QAExCmC,EAAAA,EAAAA,GAAA,QAAMU,UAAU,aAAY,cACd/D,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,OAAO,QAGrDsC,EAAAA,EAAAA,GAAA,OAAKW,IAAKvD,EAAYY,QAErB8B,GACE5C,EAAgB0D,QACfZ,EAAAA,EAAAA,GAACa,EAAAA,EAAe,CAACD,MAAO1D,EAAgB0D,SAY5CZ,EAAAA,EAAAA,GAAA,OAAKU,UAAU,gBACZZ,GACCE,EAAAA,EAAAA,GAACc,EAAe,KAAC,qBAEjB7D,IAIJ+C,EAAAA,EAAAA,GAACe,EAAAA,EAAU,CAACC,KAAM5D,EAAY4D,KAAMC,QAAS7D,EAAY8D,WAExD/B,IAASa,EAAAA,EAAAA,GAACmB,EAAAA,EAAW,CAAChC,MAAOA,EAAOiC,QAASjE,EAAOuC,OACrC,EAMf,MA8CDoB,GAAeO,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAjD,KAAA,SAAAmD,OAAA,mE","sources":["webpack://kciter.so/./src/pages/post.tsx"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { graphql, PageProps, useStaticQuery } from \"gatsby\";\nimport DefaultTemplate from \"@templates/default\";\nimport SEO from \"@components/SEO\";\nimport dayjs from \"dayjs\";\nimport PostFooter from \"@components/PostFooter\";\nimport RelatedPost from \"@components/RelatedPost\";\nimport TableOfContents from \"@components/TableOfContents\";\nimport { Helmet } from \"react-helmet\";\nimport $ from \"jquery\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Series from \"@components/Series\";\nimport styled from \"@emotion/styled\";\n\ndayjs.extend(require(\"dayjs/plugin/localizedFormat\"));\n\nconst PostTemplate = ({ data, location, pageContext, children }: PageProps) => {\n  const { tableOfContents, fields, frontmatter, excerpt } = (data as any).mdx;\n\n  const { series } = pageContext as any;\n\n  const author = \"Lee Sun-Hyoup\";\n  const date = dayjs(fields.date).locale(\"ko\").format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: `${location.href}${frontmatter.image}`,\n    mainEntityOfPage: {\n      \"@type\": \"WebPage\",\n      \"@id\": location.href,\n    },\n    author: { \"@type\": \"Person\", name: author },\n    url: location.href,\n    description: excerpt,\n    \"@type\": \"BlogPosting\",\n    \"@context\": \"https://schema.org\",\n  };\n\n  useEffect(() => {\n    if (typeof document === undefined) return;\n\n    $(function () {\n      $(\".post-container a[data-footnote-ref]\").each((_, item) => {\n        const href = $(item).attr(\"href\")?.slice(1);\n        const text = $(\"#\" + href)\n          .text()\n          .replace(\"â†©\", \"\");\n\n        $(item).attr(\"data-tooltip\", text);\n      });\n    });\n  }, []);\n\n  const [posts, setPosts] = useState();\n  useEffect(() => {\n    setPosts(\n      (data as any).allMdx.edges\n        .filter((item: any) => item.node.fields.slug !== fields.slug)\n        .sort(() => Math.random() - 0.5)\n        .slice(0, 6)\n    );\n  }, []);\n\n  const draft = frontmatter.draft && process.env.NODE_ENV !== \"development\";\n\n  return (\n    <DefaultTemplate>\n      <SEO\n        title={frontmatter.title}\n        description={excerpt}\n        meta={[\n          {\n            name: `article:published_time`,\n            content: dayjs(fields.date).locale(\"ko\").format(),\n          },\n          {\n            name: `image`,\n            content: `https://kciter.so${frontmatter.image}`,\n          },\n          {\n            property: `og:image`,\n            content: `https://kciter.so${frontmatter.image}`,\n          },\n          {\n            property: `og:image:secure_url`,\n            content: `https://kciter.so${frontmatter.image}`,\n          },\n        ]}\n      />\n\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(applicationLdJson)}\n        </script>\n      </Helmet>\n\n      <h1 className=\"post-title\">{frontmatter.title}</h1>\n\n      <span className=\"post-date\">\n        Written on {dayjs(fields.date).locale(\"en\").format(\"LL\")}\n      </span>\n\n      <img src={frontmatter.image} />\n\n      {draft ||\n        (tableOfContents.items && (\n          <TableOfContents items={tableOfContents.items} />\n        ))}\n\n      {/* {draft ||\n        (series?.items && (\n          <Series\n            title={series.title}\n            items={series.items}\n            currentItem={frontmatter.title}\n          />\n        ))} */}\n\n      <div className=\"post-content\">\n        {draft ? (\n          <NotYetPublished>Not yet published</NotYetPublished>\n        ) : (\n          children\n        )}\n      </div>\n\n      <PostFooter tags={frontmatter.tags} comment={frontmatter.comments} />\n\n      {posts && <RelatedPost posts={posts} current={fields.slug} />}\n    </DefaultTemplate>\n  );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      tableOfContents\n      excerpt\n      fields {\n        slug\n        date\n      }\n      frontmatter {\n        title\n        categories\n        tags\n        image\n        comments\n        draft\n      }\n    }\n    allMdx(\n      filter: {\n        fields: { type: { eq: \"post\" } }\n        frontmatter: { draft: { ne: true }, hide: { ne: true } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            date\n            slug\n          }\n          frontmatter {\n            title\n            image\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst NotYetPublished = styled.div`\n  margin: 16px 0;\n  font-weight: bold;\n  font-size: 20px;\n  text-align: center;\n`"],"names":["dayjs","require","_ref","data","location","pageContext","children","tableOfContents","fields","frontmatter","excerpt","mdx","series","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","href","mainEntityOfPage","author","name","url","description","useEffect","undefined","document","$","each","_","item","_$$attr","attr","slice","text","replace","posts","setPosts","useState","allMdx","edges","filter","node","slug","sort","Math","random","draft","process","___EmotionJSX","DefaultTemplate","SEO","meta","content","property","Helmet","type","JSON","stringify","className","src","items","TableOfContents","NotYetPublished","PostFooter","tags","comment","comments","RelatedPost","current","_styled","target","styles"],"sourceRoot":""}