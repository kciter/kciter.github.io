{"version":3,"file":"component---src-pages-bookshelf-tsx-fcea52b38b222e9a519c.js","mappings":"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","sources":["webpack://kciter.so/./src/components/SEO/index.tsx","webpack://kciter.so/./src/pages/bookshelf.tsx"],"sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SEOProps {\n  children?: React.ReactNode;\n  title?: string;\n  description?: string;\n}\n\nconst SEO = ({ children, title, description }: SEOProps) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <>\n      <html lang=\"ko\" />\n\n      {/* Font */}\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Quattrocento+Sans\" />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n      />\n\n      {/* SEO */}\n      <title id=\"title\">{metaTitle}</title>\n\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta charSet=\"utf-8\" />\n      <meta name=\"robots\" content=\"index,follow\" />\n      <meta name=\"googlebot\" content=\"index,follow\" />\n      <meta name=\"color-scheme\" content=\"light\" />\n\n      <meta id=\"description\" name=\"description\" content={metaDescription} />\n      <meta id=\"og:title\" property=\"og:title\" content={metaTitle} />\n      <meta id=\"og:description\" property=\"og:description\" content={metaDescription} />\n      <meta id=\"og:type\" property=\"og:type\" content=\"website\" />\n      <meta id=\"og:site_name\" property=\"og:site_name\" content=\"kciter.so\" />\n      <meta id=\"og:locale\" property=\"og:locale\" content=\"ko_KR\" />\n      <meta id=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      <meta id=\"twitter:creator\" name=\"twitter:creator\" content=\"Sunhyoup Lee\" />\n      <meta id=\"twitter:title\" name=\"twitter:title\" content={metaTitle} />\n      <meta id=\"twitter:description\" name=\"twitter:description\" content={metaDescription} />\n      <meta id=\"og:image\" property=\"og:image\" content=\"https://kciter.so/images/og.png\" />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nconst BookshelfPage = () => {\n  const result = useStaticQuery(graphql`\n    {\n      allMdx(\n        sort: { fields: { date: DESC } }\n        filter: {\n          fields: { type: { eq: \"post\" } }\n          frontmatter: {\n            draft: { ne: true }\n            hide: { ne: true }\n            categories: { eq: \"book-report\" }\n          }\n        }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              timeToRead {\n                minutes\n              }\n              date\n              slug\n            }\n            frontmatter {\n              tags\n              title\n              cover\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = result.allMdx.edges;\n\n  return (\n    <DefaultTemplate>\n      <Container>\n        {posts.map((post: any) => (\n          <BookItem link={post.node.fields.slug} coverImage={post.node.frontmatter.cover} />\n        ))}\n      </Container>\n    </DefaultTemplate>\n  );\n};\n\nexport default BookshelfPage;\n\nexport const Head = () => {\n  return <SEO title=\"Bookshelf | kciter.so\" />;\n};\n\nconst Container = styled.div`\n  display: grid;\n  width: 90%;\n  margin: 0 auto;\n  position: relative;\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: 12px;\n  padding: 4px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\ninterface Props {\n  link: string;\n  coverImage: string;\n}\n\nconst BookItem = ({ link, coverImage }: Props) => {\n  return (\n    <ItemContainer>\n      <BookPage>\n        <BookPage>\n          <Inner />\n          <BookCover to={link}>\n            <img src={coverImage} />\n            <Effect />\n            <Light />\n          </BookCover>\n        </BookPage>\n      </BookPage>\n    </ItemContainer>\n  );\n};\n\nconst ItemContainer = styled.div`\n  position: relative;\n  cursor: default;\n  padding: 16px;\n  margin: 0;\n`;\n\nconst Inner = styled.div`\n  position: absolute;\n  width: 90%;\n  height: 96%;\n  top: 1%;\n  left: 16px;\n  border: 1px solid grey;\n  border-radius: 2px 6px 6px 2px;\n  background: white;\n  box-shadow:\n    10px 40px 40px -10px #00000030,\n    inset -2px 0 0 grey,\n    inset -3px 0 0 #dbdbdb,\n    inset -4px 0 0 white,\n    inset -5px 0 0 #dbdbdb,\n    inset -6px 0 0 white,\n    inset -7px 0 0 #dbdbdb,\n    inset -8px 0 0 white,\n    inset -9px 0 0 #dbdbdb;\n`;\n\nconst BookPage = styled.div`\n  position: relative;\n`;\n\nconst BookCover = styled(Link)`\n  display: block;\n  line-height: 0;\n  position: relative;\n  border-radius: 2px 6px 6px 2px;\n  box-shadow:\n    6px 6px 18px -2px rgba(0, 0, 0, 0.2),\n    24px 28px 40px -6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease-in-out;\n  transform: perspective(2000px) rotateY(-15deg) translateX(-10px) scaleX(0.94);\n  cursor: pointer;\n\n  &:hover {\n    transform: perspective(2000px) rotateY(0deg) translateX(0px) scaleX(1);\n    transform-style: preserve-3d;\n    box-shadow:\n      6px 6px 12px -1px rgba(0, 0, 0, 0.1),\n      20px 14px 16px -6px rgba(0, 0, 0, 0.1);\n  }\n\n  img {\n    grid-row: 1 / -1;\n    grid-column: 1;\n    width: 100%;\n    border-radius: 2px 6px 6px 2px;\n  }\n`;\n\nconst Effect = styled.div`\n  position: absolute;\n  width: 20px;\n  height: 100%;\n  margin-left: 8px;\n  top: 0;\n  border-left: 2px solid rgba(0, 0, 0, 0.04);\n  background-image: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 0.2) 0%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  transition: all 0.5s ease;\n  z-index: 5;\n\n  &:hover {\n    margin-left: 14px;\n  }\n`;\n\nconst Light = styled.div`\n  width: 95%;\n  height: 100%;\n  position: absolute;\n  border-radius: 3px;\n  background-image: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0.2) 100%\n  );\n  top: 0;\n  right: 0;\n  opacity: 0.1;\n  transition: all 0.5s ease;\n  z-index: 4;\n`;\n"],"names":["_ref","_site$siteMetadata","children","title","description","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","_jsxs","_Fragment","_jsx","lang","rel","href","id","name","content","charSet","property","BookshelfPage","posts","allMdx","edges","DefaultTemplate","Container","map","post","BookItem","link","node","fields","slug","coverImage","frontmatter","cover","Head","SEO","_styled","target","styles","ItemContainer","BookPage","Inner","BookCover","to","src","Effect","Light","Link"],"sourceRoot":""}