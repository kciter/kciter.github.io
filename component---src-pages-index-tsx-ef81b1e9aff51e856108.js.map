{"version":3,"file":"component---src-pages-index-tsx-ef81b1e9aff51e856108.js","mappings":"6IAmBA,MAAMA,EAAMC,IAA6C,IAADC,EAAAC,EAAAC,EAAA,IAA3C,MAAEC,EAAK,YAAEC,EAAW,KAAEC,GAAgBN,EACjD,MAAM,KAAEO,IAASC,EAAAA,EAAAA,IAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAYP,IAA0B,QAArBH,EAAIM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBG,OAE9C,OACEQ,EAAAA,EAAAA,GAACC,EAAAA,EAAM,CACLC,eAAgB,CACdC,GAAI,MAENX,MAAOO,EACPK,cAAeZ,EAAK,sBAAsBa,EAC1CX,KAAM,CACJ,CACEY,KAAK,cACLC,QAASV,GAEX,CACEW,SAAS,SACTD,QAAQ,iBAEV,CACEC,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASV,GAEX,CACEW,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,eACTD,QAAQ,aAEV,CACEC,SAAS,YACTD,QAAQ,SAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAAS,gBAEX,CACED,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASV,GAEX,CACEW,SAAS,WACTD,QACiE,QAD1DjB,EACiD,QADjDC,EACLG,EAAKe,MAAMC,GAAgC,aAAlBA,EAAKF,kBAAwB,IAAAjB,OAAA,EAAtDA,EAAwDgB,eAAO,IAAAjB,EAAAA,EAC/D,oCAEJqB,OAAOjB,IACT,EAINP,EAAIyB,aAAe,CACjBC,KAAK,KACLnB,KAAM,GACND,YAAY,IAUd,K,0HClFA,MArBoBL,IAAkD,IAAjD,MAAE0B,EAAK,QAAEC,EAAO,MAAEC,GAAyB5B,EAC9D,OACEY,EAAAA,EAAAA,GAACiB,EAAS,CAACD,MAAOA,IAChBhB,EAAAA,EAAAA,GAACkB,EAAK,KACHJ,EAAMK,KACJC,GACCA,EAAKC,KAAKC,OAAOC,OAASR,IACxBf,EAAAA,EAAAA,GAACwB,EAAI,CAACC,IAAKL,EAAKC,KAAKC,OAAOC,OAC1BvB,EAAAA,EAAAA,GAAA,KAAG0B,KAAMN,EAAKC,KAAKC,OAAOC,OACxBvB,EAAAA,EAAAA,GAAA,OAAK2B,IAAKP,EAAKC,KAAKO,YAAYC,SAChC7B,EAAAA,EAAAA,GAAC8B,EAAK,KAAEV,EAAKC,KAAKO,YAAYpC,QAC9BQ,EAAAA,EAAAA,GAAA,aAAQoB,EAAKC,KAAKC,OAAOS,WAM3B,EAMhB,MAAMd,GAASe,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAA1B,KAAA,UAAA4B,OAAA,yCAKThB,GAAKc,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAA1B,KAAA,UAAA4B,OAAA,sIAWLV,GAAIQ,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAA1B,KAAA,UAAA4B,OAAA,kJAgBJJ,GAAKE,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAA1B,KAAA,SAAA4B,OAAA,oEChDX,MAfYC,KAERnC,EAAAA,EAAAA,GAAA,OAAKoC,UAAU,qBACbpC,EAAAA,EAAAA,GAAA,OAAKoC,UAAU,WACbpC,EAAAA,EAAAA,GAAA,OAAK2B,IAAI,+BAGX3B,EAAAA,EAAAA,GAAA,OAAKoC,UAAU,YACbpC,EAAAA,EAAAA,GAAA,OAAKoC,UAAU,QAAO,QACtBpC,EAAAA,EAAAA,GAAA,OAAKoC,UAAU,eAAc,Y,UCwErC,MA5EcC,KACZ,MAAMC,GAAS1C,EAAAA,EAAAA,IAAe,cA0BxBkB,GAAQyB,EAAAA,EAAAA,UACZ,IACED,EAAOE,OAAOC,MACXC,MACC,CAACC,EAAQC,KACN,IAAIC,KAAKD,EAAEvB,KAAKC,OAAOS,OAAS,IAAIc,KAAKF,EAAEtB,KAAKC,OAAOS,QAE3De,OAAO,EAAG,IACf,CAACR,IAGH,OACEtC,EAAAA,EAAAA,GAAC+C,EAAAA,EAAe,MACd/C,EAAAA,EAAAA,GAACb,EAAAA,EAAG,CAACK,MAAM,MAEXQ,EAAAA,EAAAA,GAACmC,EAAG,OAEJnC,EAAAA,EAAAA,GAAA,OACEgB,MAAO,CACLgC,QAAS,OACTC,eAAgB,gBAChBC,aAAc,KAGhBlD,EAAAA,EAAAA,GAAA,MAAIgB,MAAO,CAAEmC,cAAe,EAAGC,OAAQ,EAAGC,SAAU,KAAM,iBAG1DrD,EAAAA,EAAAA,GAAA,KACEgB,MAAO,CACLqC,SAAU,GACVC,WAAY,IACZC,eAAgB,OAMhBC,OAAQ,YAGX,gBAIF1C,IAASd,EAAAA,EAAAA,GAACyD,EAAW,CAAC3C,MAAOA,EAAOE,MAAO,CAAE0C,QAAS,KACvC,C","sources":["webpack://kciter.so/./src/components/SEO/index.tsx","webpack://kciter.so/./src/components/RelatedPost/index.tsx","webpack://kciter.so/./src/components/Bio/index.tsx","webpack://kciter.so/./src/pages/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  imagePath?: string;\n  meta?: any;\n}\n\nconst SEO = ({ title, description, meta }: SEOProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        ko: \"ko\",\n      }}\n      title={metaTitle}\n      titleTemplate={title ? `%s | kciter.so` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `author`,\n          content: `Lee Sun-Hyoup`,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:site_name`,\n          content: `kciter.so`,\n        },\n        {\n          property: `og:locale`,\n          content: `ko_KR`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: \"Sunhyoup Lee\",\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content:\n            meta.find((item: any) => item.property === \"og:image\")?.content ??\n            \"https://kciter.so/images/og.png\",\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import styled from \"@emotion/styled\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\ninterface RelatedPostProps {\n  posts: any;\n  current?: string;\n  style?: React.CSSProperties;\n}\n\nconst RelatedPost = ({ posts, current, style }: RelatedPostProps) => {\n  return (\n    <Container style={style}>\n      <Posts>\n        {posts.map(\n          (post: any) =>\n            post.node.fields.slug !== current && (\n              <Post key={post.node.fields.slug}>\n                <a href={post.node.fields.slug}>\n                  <img src={post.node.frontmatter.image} />\n                  <Title>{post.node.frontmatter.title}</Title>\n                  <small>{post.node.fields.date}</small>\n                </a>\n              </Post>\n            )\n        )}\n      </Posts>\n    </Container>\n  );\n};\n\nexport default RelatedPost;\n\nconst Container = styled.div`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n`\n\nconst Posts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  row-gap: 10px;\n\tcolumn-gap: 20px;\n\n  @media (max-width: 30rem) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Post = styled.div`\n  img {\n    height: 140px;\n    object-fit: cover;\n    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.05);\n\n    @media (max-width: 30rem) {\n      width: 100%\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n`\n\nconst Title = styled.div`\n  margin-top: 12px;\n  /* font-family: serif; */\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 100;\n`","import React from \"react\";\n\nconst Bio = () => {\n  return (\n    <div className=\"member-container\">\n      <div className=\"avatar\">\n        <img src=\"/images/about/avatar.jpg\" />\n      </div>\n\n      <div className=\"summary\">\n        <div className=\"name\">이선협</div>\n        <div className=\"description\">그냥 개발자</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport DefaultTemplate from \"@templates/default\";\nimport SEO from \"@components/SEO\";\nimport RelatedPost from \"@components/RelatedPost\";\nimport Bio from \"@components/Bio\";\nimport { graphql, PageProps, useStaticQuery } from \"gatsby\";\n\nconst Index = () => {\n  const result = useStaticQuery(graphql`\n    {\n      allMdx(\n        limit: 9\n        sort: { fields: { date: DESC } }\n        filter: {\n          fields: { type: { eq: \"post\" } }\n          frontmatter: { draft: { ne: true }, hide: { ne: true } }\n        }\n      ) {\n        edges {\n          node {\n            fields {\n              date\n              slug\n            }\n            frontmatter {\n              title\n              image\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = useMemo(\n    () =>\n      result.allMdx.edges\n        .sort(\n          (a: any, b: any) =>\n            +new Date(b.node.fields.date) - +new Date(a.node.fields.date)\n        )\n        .splice(0, 9),\n    [result]\n  );\n\n  return (\n    <DefaultTemplate>\n      <SEO title=\"\" />\n\n      <Bio />\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginBottom: 8,\n        }}\n      >\n        <h3 style={{ letterSpacing: 2, margin: 0, fontSize: 18 }}>\n          RECENT POSTS\n        </h3>\n        <a\n          style={{\n            fontSize: 14,\n            fontWeight: 500,\n            textDecoration: \"none\",\n            // backgroundSize: \"100%\",\n            // backgroundRepeat: \"repeat\",\n            // backgroundClip: \"text\",\n            // backgroundImage:\n            //   \"linear-gradient(90deg, #80D0F2 0%, #5C82FF 50%, #C480FF 100%)\",\n            cursor: \"pointer\",\n            // WebkitTextFillColor: \"transparent\",\n          }}\n        >\n          All posts ▸\n        </a>\n      </div>\n      {posts && <RelatedPost posts={posts} style={{ padding: 0 }} />}\n    </DefaultTemplate>\n  );\n};\n\nexport default Index;\n"],"names":["SEO","_ref","_site$siteMetadata","_meta$find$content","_meta$find","title","description","meta","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","___EmotionJSX","Helmet","htmlAttributes","ko","titleTemplate","undefined","name","content","property","find","item","concat","defaultProps","lang","posts","current","style","Container","Posts","map","post","node","fields","slug","Post","key","href","src","frontmatter","image","Title","date","_styled","target","styles","Bio","className","Index","result","useMemo","allMdx","edges","sort","a","b","Date","splice","DefaultTemplate","display","justifyContent","marginBottom","letterSpacing","margin","fontSize","fontWeight","textDecoration","cursor","RelatedPost","padding"],"sourceRoot":""}