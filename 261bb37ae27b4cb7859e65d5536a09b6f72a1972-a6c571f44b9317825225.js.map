{"version":3,"file":"261bb37ae27b4cb7859e65d5536a09b6f72a1972-a6c571f44b9317825225.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2023-07-10-effective-work.mdx","webpack://kciter.so/./src/components/Image/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    a: \"a\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    span: \"span\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"현대인의 삶은 너무나도 힘들다. 알아야할 정보는 너무나도 많고 항상 새로운 도전을 요구받는다. 그렇게 끝이 보이지 않는 일과 막막한 미래를 보면 쉽게 무력감에 휩싸인다. 필자도 마찬가지다. 미래에 대한 불확실성과 언제까지 노력을 해야할까를 생각하면 무기력해진다.\"), \"\\n\", React.createElement(_components.p, null, \"필자는 마음을 단련하기 보다는 행동을 통해 마음을 다스리는게 더 좋은 방향이라 믿는다. 몇해 전부터 조금씩 유행하는 사상 중 \", React.createElement(_components.strong, null, \"스토아 사상\"), \"이라는 것이 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"스토아 학파의 핵심 사상은 '불행은 결코 우리의 행복을 감소시킬 수 없다'이고, 스토아 철학은 불행을 이기는 철학이다. - \", React.createElement(_components.a, {\n    href: \"https://namu.wiki/w/%EC%8A%A4%ED%86%A0%EC%95%84%20%ED%95%99%ED%8C%8C\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"나무위키\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"자세한 내용은 생략하고 핵심적인 내용만 말하자면 \", React.createElement(_components.strong, null, \"내가 통제 가능한 것과 내가 통제 불가능한 것을 나눠 통제할 수 있는 것에 집중하고 통제 불가능한 것을 무시하자\"), \"라고 볼 수 있다. 듣기에는 너무나도 당연하고 쉬워보이지만 실제로는 굉장히 어려운 일이다. 그래서 필자는 앞서 말한 것 처럼 생각을 바꾸는 것보다는 행동을 통해 생각을 바꿀 수 있도록 노력했다. 그 중 하나가 \", React.createElement(_components.strong, null, \"작은 성취\"), \"다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/step-up.jpeg\",\n    caption: \"작은 성취\"\n  }), \"\\n\", React.createElement(_components.p, null, \"보통 대부분의 사람들은 행복을 추구하며 산다. 본인이 행복해질 수 있는 조건은 사람마다 다르겠지만 행복한 삶을 위해 추상적인 큰 목표를 세우게 된다. 하지만 필자같은 \", React.createElement(_components.strong, null, \"보통 사람은 빠른 시간에 큰 목표를 달성하기 어렵다\"), \". 그러다보면 \", React.createElement(_components.strong, null, \"다른 할 일\"), \"이 생기고 이로 인해 지쳐서 의욕이 감소되거나 목표 자체를 잊기도 한다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/too-much-work.png\",\n    caption: \"굉장히 자주 볼 수 있는 사례\"\n  }), \"\\n\", React.createElement(_components.p, null, \"앞서 스토아 사상을 언급한 것이 의아할 수 있다. 우리는 큰 목표를 포기하는 경우가 많기 때문에 이를 통제할 수 없는 것이라 생각할 때가 많다. 하지만 분명 터무니 없는 것이 아니라면 대부분은 \", React.createElement(_components.strong, null, \"할 수 있는 것\"), \"이다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서 필자는 큰 목표를 달성하기 위해 \", React.createElement(_components.strong, null, \"작은 성취를 통해 큰 목표를 달성하는 방법론\"), \"에 대해 소개하고자 한다. 우스꽝스러운 제목을 사용했지만 \", React.createElement(_components.strong, null, \"실제로 존재하는 방법론\"), \"이며 구조적이다. 이 글을 읽고 나면 더 효율적이고 편한 마음으로 삶을 대할 수 있을 것이라 믿는다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"할-일-관리\"\n  }, React.createElement(_components.a, {\n    href: \"#할-일-관리\"\n  }, \"할 일 관리\")), \"\\n\", React.createElement(_components.p, null, \"현대 사회의 지식 노동자는 과학의 발전으로 인해 개인이 할 수 있고 해야하는 일이 너무나도 많아졌다. 그로인해 우리는 할 일을 잊지 않고 우선 순위를 정리하기 위해 \", React.createElement(_components.strong, null, \"할 일 관리\"), \" 혹은 \", React.createElement(_components.strong, null, \"ToDo 리스트\"), \"라는 이름으로 각자 할 일을 정리하곤 한다. 관리하는 방법은 사람마다 다를 것이다. 하지만 과연 효율적으로 관리하고 있는 것이 맞을지는 점검을 할 필요가 있다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"좋지-않은-방법\"\n  }, React.createElement(_components.a, {\n    href: \"#좋지-않은-방법\"\n  }, \"좋지 않은 방법\")), \"\\n\", React.createElement(_components.p, null, \"할 일 관리를 잘하는 방법을 알기 전에 먼저 좋지 않은 방법을 알아보자.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"하루-단위로-할-일을-정리하는-경우\"\n  }, React.createElement(_components.a, {\n    href: \"#하루-단위로-할-일을-정리하는-경우\"\n  }, \"하루 단위로 할 일을 정리하는 경우\")), \"\\n\", React.createElement(_components.p, null, \"필자가 주변 사례를 조사했을 때 가장 많이 볼 수 있었던 관리 방법이다. 얼핏보면 큰 문제가 없어보이지만 사실 \", React.createElement(_components.strong, null, \"돌발 상황\"), \"에 약하다는 큰 문제가 있다. 돌발 상황의 예시는 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"갑자기 급한 할 일이 생기는 경우\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"긴급한 업무 추가\"), \"\\n\", React.createElement(_components.li, null, \"급한 약속\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"못한 일이 생긴 경우\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"오늘 못한 일이 다음 날로 미뤄진 경우\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"예상보다 많은 일을 한 경우\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"다음 날 할 일을 끝낸 경우\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"돌발 상황이 발생할 경우 오늘 이후의 할 일 관리를 다시 정리해야 한다는 문제점이 있다. 그리고 생각보다 돌발 상황은 자주 발생한다. 보통 이런 일이 반복될 경우 \", React.createElement(_components.strong, null, \"귀찮아서\"), \" 그대로 할 일 관리를 하지 않게 되는 경우가 많다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/bad-case-1.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, 어차피 작성한 할 일 관리대로 진행되지 않으니 할 일 관리를 할 필요가 없다는 생각이 들게 된다. 따라서 하루 단위로 계획을 잡고 할 일을 정리하는 것은 좋지 않은 방법이라 할 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"할-일이-너무-큰-경우\"\n  }, React.createElement(_components.a, {\n    href: \"#할-일이-너무-큰-경우\"\n  }, \"할 일이 너무 큰 경우\")), \"\\n\", React.createElement(_components.p, null, \"해야할 일을 너무 크게 잡은 경우 \", React.createElement(_components.strong, null, \"중간 상황\"), \"을 추적하기 어렵다는 문제가 있다. 그말은 결국 할 일이 \", React.createElement(_components.strong, null, \"언제 끝날지 예측하기 어렵다는 것\"), \"이라 볼 수 있다. 결국 너무 크게 잡은 일은 \", React.createElement(_components.strong, null, \"다른 일\"), \"에 밀려서 점점 잊혀지게 된다.\"), \"\\n\", React.createElement(_components.p, null, \"예를 들자면, \", React.createElement(_components.strong, null, \"프로젝트 A를 완료한다\"), \"라는 할 일을 만들었다고 가정해보자. 이 일은 언제 끝날지 예측하기 어렵다. 계속 끝내지 못하는 할 일을 보면 할 일 관리의 의미를 잃게 된다. 그래서 방치하다가 점점 잊혀지게 된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/bad-case-2.png\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"할-일을-너무-추상적으로-만든-경우\"\n  }, React.createElement(_components.a, {\n    href: \"#할-일을-너무-추상적으로-만든-경우\"\n  }, \"할 일을 너무 추상적으로 만든 경우\")), \"\\n\", React.createElement(_components.p, null, \"추상적인 일은 \", React.createElement(_components.strong, null, \"무엇부터 시작해야 할지\"), \" 알 수 없다는 문제가 있다. 예를 들어, 영어 공부하기라는 할 일을 만들었다고 가정해보자. 이런 일은 \", React.createElement(_components.strong, null, \"어떻게 시작해야 할지 그리고 완료 조건이 무엇인지 알 수 없다\"), \". 따라서 할 일이 너무 큰 경우와 유사하게 언제 이 일을 마칠 수 있을지 \", React.createElement(_components.strong, null, \"예측이 불가능\"), \"하다. 명확하지 않은 일은 다른 일에 밀려 방치되다 이 일을 왜 하기로 했는지조차 잊게된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/bad-case-3.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"원칙-지키기\"\n  }, React.createElement(_components.a, {\n    href: \"#원칙-지키기\"\n  }, \"원칙 지키기\")), \"\\n\", React.createElement(_components.p, null, \"할 일 관리의 안좋은 예를 보았으니 이제 해결 방법을 알아보자.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"기본-원칙\"\n  }, React.createElement(_components.a, {\n    href: \"#기본-원칙\"\n  }, \"기본 원칙\")), \"\\n\", React.createElement(_components.p, null, \"먼저 \", React.createElement(_components.strong, null, \"할 일\"), \"이라는 것의 기본 원칙을 정의해보자. 필자가 생각한 기본적인 원칙은 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"우리는 일을 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">할지 말지</code>\"\n    }\n  }), \" 정할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"우리는 일을 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">언제 시작할지</code>\"\n    }\n  }), \" 정할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"모든 일에는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">마감</code>\"\n    }\n  }), \"이 존재한다.\"), \"\\n\", React.createElement(_components.li, null, \"모든 일은 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">단순해질 수</code>\"\n    }\n  }), \" 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"당연한 말이지만 우리는 일을 \", React.createElement(_components.strong, null, \"할지 말지 선택\"), \"할 수 있다. 우선 순위에 따라 지금 하지 않고 미룰 수도 있고 지금 당장 필요하지 않더라도 기분에 따라 먼저 처리할 수도 있다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 우리는 일을 언제 시작할지 정할 수 있다. 예를 들어, 내일 할 수도 있고 다음 주에 할 수도 있다. 참고로 여기서 중요한 것은 \", React.createElement(_components.strong, null, \"시작은 정할 수 있지만 언제 끝낼지는 예측 할 수 있어도 정할 수 없다\"), \"는 점이다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 모든 일에는 마감이 존재한다. 이는 언제 끝낼지가 아닌 \", React.createElement(_components.strong, null, \"언제까지는 끝내야한다\"), \"에 가깝다. 극단적으로 보면 모든 일은 죽기 전에 끝내야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"마지막으로 모든 일은 단순해질 수 있다. 아무리 \", React.createElement(_components.strong, null, \"어렵고 복잡한 일이라도 작은 단위로 쪼갠다면 단순\"), \"해질 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"그럼 이 기본 원칙에 따라 \", React.createElement(_components.strong, null, \"할 일 관리 규칙\"), \"을 만들어보자.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"할-일을-시각화하라\"\n  }, React.createElement(_components.a, {\n    href: \"#할-일을-시각화하라\"\n  }, \"할 일을 시각화하라\")), \"\\n\", React.createElement(_components.p, null, \"보통 할 일 관리라는 것을 한다면 이미 특정 도구를 사용하여 이 규칙을 지키고 있을 가능성이 높다. 할 일을 시각화 해야하는 가장 큰 이유는 \", React.createElement(_components.strong, null, \"잊지 않기 위함\"), \"이다. 이를 위해 다양한 도구를 사용할 수 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"애플리케이션\"), \"\\n\", React.createElement(_components.li, null, \"포스트잇\"), \"\\n\", React.createElement(_components.li, null, \"노트\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"시각화와 더불어 잘하기 위한 몇 가지 규칙을 더 정해보자.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"할 일이 생각나면 바로 기록하기\"), \"\\n\", React.createElement(_components.li, null, \"자주 볼 수 있는 곳에 기록하기\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"아무리 시각화하더라도 자주 들여다보지 않는다면 의미가 없다. 따라서 할 일이 떠오르면 바로 기록하고 이를 위해 자주 볼 수 있는 곳에 기록하는 것이 좋다. 예를 들면, '길을 걷다 좋은 생각이나서 \", React.createElement(_components.strong, null, \"항상 지니는 수첩\"), \"에 기록했다' 같은 경우가 있다. 여기서 중요한 건 항상 지니는 수첩이다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"내가-할-수-있는-것과-할-수-없는-것을-분리하라\"\n  }, React.createElement(_components.a, {\n    href: \"#내가-할-수-있는-것과-할-수-없는-것을-분리하라\"\n  }, \"내가 할 수 있는 것과 할 수 없는 것을 분리하라\")), \"\\n\", React.createElement(_components.p, null, \"앞서 스토아 사상을 말한 것처럼 내가 \", React.createElement(_components.strong, null, \"통제할 수 없는 일\"), \"은 할 일로서 가치가 없다. 여기서 말하는 통제할 수 없는 일은 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"내가 영원히 수행할 수 없는 일\"), \"\\n\", React.createElement(_components.li, null, \"추상적인 일\"), \"\\n\", React.createElement(_components.li, null, \"무언가 선행되어야 할 수 있는 일\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"예를 들어 '키 190cm되기' 같은 일은 내가 영원히 수행할 수 없는 일이다. 추상적인 일은 앞서 설명한 것 처럼 무엇을 해야할지 알 수 없기에 할 수 없는 일이나 마찬가지다. 마지막으로 선행되어야 할 수 있는 일은 선행되는 일을 끝내기 전까지는 시작할 수 없기 때문에 당연히 할 수 없는 일이다. 만약 선행되는 일을 마쳤다면 할 수 있는 일이 된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/imposibble.png\",\n    caption: \"통제할 수 없는 일은 과감히 버리자\"\n  }), \"\\n\", React.createElement(_components.p, null, \"그럼 내가 통제 할 수 있는 일에 대해서 이야기해보자. 통제 할 수 있는 일은 내가 원한다면 바로 수행할 수 있는 일이며 구체적이야 한다. 여기서 내가 통제 할 수 있는 일은 가능한 만큼만 정리하는 것이 좋다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"언제 할 것인지?\"), \"\\n\", React.createElement(_components.li, null, \"언제까지 해야 하는지?\"), \"\\n\", React.createElement(_components.li, null, \"얼마나 중요한지?\"), \"\\n\", React.createElement(_components.li, null, \"어떤 성격의 일인지?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"참고로 자세할수록 좋지만 정리에 너무 많은 시간을 쓰는 것은 좋지 않다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"추상적인-일을-구체적으로-만들어라\"\n  }, React.createElement(_components.a, {\n    href: \"#추상적인-일을-구체적으로-만들어라\"\n  }, \"추상적인 일을 구체적으로 만들어라\")), \"\\n\", React.createElement(_components.p, null, \"추상적인 일은 아직 \", React.createElement(_components.strong, null, \"무엇을 해야 하는지 모른다\"), \"고 볼 수 있다. 그렇다면 무엇을 해야하는지 알 수 있어야 한다. 필자는 개발자답게 RSA라는 이름으로 방법을 정리했다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Research: 자료를 수집한다.\"), \"\\n\", React.createElement(_components.li, null, \"Study: 학습한다.\"), \"\\n\", React.createElement(_components.li, null, \"Align: 방향성을 정하여 정리한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"'영어 공부하기'라는 추상적인 일이 있다고 가정해보자. 이 일은 아직 무엇부터 해야하는지 알 수 없다. 따라서 RSA 방법을 적용해보자.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"영어 공부에 대한 자료를 수집한다.\"), \"\\n\", React.createElement(_components.li, null, \"자료 중 나에게 적합한 것이 무엇인지 학습한다.\"), \"\\n\", React.createElement(_components.li, null, \"필요없는 자료를 폐기하고 할 일을 정리한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 과정에서 만약 제일 먼저 영어 단어를 배우는 것이 좋겠다라고 판단된다면 영어 공부하기라는 할 일은 영어 단어 10개 외우기로 변경이 될 수 있다. 이렇게 \", React.createElement(_components.strong, null, \"추상적인 일을 구체적으로\"), \" 만들어 나갈 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"너무-큰-일은-단순하게-만들어라\"\n  }, React.createElement(_components.a, {\n    href: \"#너무-큰-일은-단순하게-만들어라\"\n  }, \"너무 큰 일은 단순하게 만들어라\")), \"\\n\", React.createElement(_components.p, null, \"앞서 말한 것 처럼 너무 큰 일은 \", React.createElement(_components.strong, null, \"예측이 불가능\"), \"하다. 따라서 큰 일은 \", React.createElement(_components.strong, null, \"나눠서 단순하게\"), \" 만들어야 한다. 예를 들어 필압 지원되는 그림판 구현하기 라는 할 일이 있다고 가정해보자. 이런 경우 다음과 같이 일을 나눌 수 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"필압 관련 자료 수집\"), \"\\n\", React.createElement(_components.li, null, \"필압 API 테스트\"), \"\\n\", React.createElement(_components.li, null, \"브러시 구현\"), \"\\n\", React.createElement(_components.li, null, \"지우개 구현\"), \"\\n\", React.createElement(_components.li, null, \"...\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 나누어진 일은 단순하게 만들어진다. 만약 나눴음에도 불구하고 단순하지 않다면 더 작게 나누어야 한다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"getting-things-done-gtd\"\n  }, React.createElement(_components.a, {\n    href: \"#getting-things-done-gtd\"\n  }, \"Getting Things Done (GTD)\")), \"\\n\", React.createElement(_components.p, null, \"앞서 설명한 규칙처럼 할 일을 관리하는 방법론을 이미 2001년 데이비드 알렌(David Allen)이 Getting Things Done이라는 책을 통해 소개를 했다. 이는 일종의 프레임워크이자 방법론인데, \", React.createElement(_components.strong, null, \"Things\"), \"라는 추상적인 일과 \", React.createElement(_components.strong, null, \"Action\"), \"이라는 구체적인 일로 구성된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd.png\",\n    expandable: true,\n    caption: \"PC에서 크게 보고싶다면 클릭해주세요\"\n  }), \"\\n\", React.createElement(_components.p, null, \"위 그림은 GTD의 프로세스를 나타낸 것이다. 한 번 과정을 하나씩 살펴보자.\"), \"\\n\", React.createElement(\"h3\", null, \"Things 모으기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-1.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"가장 먼저 해야하는 것은 \", React.createElement(_components.strong, null, \"Thing을 모으는 것\"), \"이다. Things는 내가 하고자 하는 모든 일을 말한다. 예를 들면, 집안일, 해보고 싶은 일, 버킷 리스트 같은 개인적인 일을 포함하여 회사 업무 같은 공적인 일도 포함된다. 이때는 추상적이든 너무 큰 일이든 가리지 않고 \", React.createElement(_components.strong, null, \"모두 기록\"), \"해두는 것이 중요하다. 따라서 오래 걸리는 작업일 수 있다.\"), \"\\n\", React.createElement(\"h3\", null, \"Action으로 분류하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-2.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"다음은 \", React.createElement(_components.strong, null, \"모은 Thing을 분류하는 것\"), \"이다. 앞서 Action은 구체적인 일이라고 표현했는데 정확하게는 \", React.createElement(_components.strong, null, \"실행할 수 있는 일\"), \"을 의미한다. Thing은 다음과 같이 분류할 수 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"영원히 실행할 수 없는 Thing이라면 버린다.\"), \"\\n\", React.createElement(_components.li, null, \"마음만 먹으면 바로 실행할 수 있는 Thing이라면 Action으로 분류한다.\"), \"\\n\", React.createElement(_components.li, null, \"Thing이 추상적이라면 일단 킵해두거나 버린다.\"), \"\\n\", React.createElement(_components.li, null, \"너무 크지만 실행할 수 있다면 Action으로 분류한다.\"), \"\\n\"), \"\\n\", React.createElement(\"h3\", null, \"추상적인 Thing을 구체화하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-3.png\",\n    width: 400\n  }), \"\\n\", React.createElement(_components.p, null, \"앞서 Action으로 분류할 때 추상적인 Thing은 일단 킵해두거나 버린다고 했다. 이번에는 킵해둔 \", React.createElement(_components.strong, null, \"추상적인 Thing을 구체화\"), \"해보자. 이때는 앞서 설명한 RSA 방법을 사용하면 된다. 이 과정을 거치면 Thing이 Action으로 분류할 수 있다.\"), \"\\n\", React.createElement(\"h3\", null, \"너무 큰 Action을 분리하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-4.png\",\n    width: 400\n  }), \"\\n\", React.createElement(_components.p, null, \"너무 큰 Action은 예측이 불가능하기 때문에 분리해서 단순하게 만들어야 한다. 여기서는 \", React.createElement(_components.strong, null, \"큰 Action을 Project라는 Action을 담아두는 그릇으로 만들어서 분리\"), \"한다. 그 후에 필요한 작업들을 추려서 새로운 Action을 만들면 된다.\"), \"\\n\", React.createElement(\"h3\", null, \"바로 할 수 있는 일은 바로 하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-5.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"만약 즉시 끝낼 수 있는 Action이라면 바로 끝낸다. 위 그림에선 5분이라고 썼지만 \", React.createElement(_components.strong, null, \"본인이 판단하기에 적당하다면 바로 처리\"), \"하는 것이 좋다.\"), \"\\n\", React.createElement(\"h3\", null, \"바로 할 수 없다면 할 일 목록에 추가하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-6.png\",\n    width: 400\n  }), \"\\n\", React.createElement(_components.p, null, \"금방 할 수 없는 Action이라면 할 일 목록에 추가한다. 이때, 더 \", React.createElement(_components.strong, null, \"구체적으로 마감일, 실행일, 목적, 분류 등 Action을 정리\"), \"한 후 할 일 목록에 쌓아둔다.\"), \"\\n\", React.createElement(\"h3\", null, \"할 일을 시작하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-7.png\",\n    width: 400\n  }), \"\\n\", React.createElement(_components.p, null, \"정리된 Action은 적절한 시점에 실행해야 한다.\"), \"\\n\", React.createElement(\"h3\", null, \"맡길 수 있는 일은 위임하기\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/gtd-8.png\",\n    width: 400\n  }), \"\\n\", React.createElement(_components.p, null, \"만약 남에게 맡길 수 있는 Action이라면 위임한다. 이때 중요한 것은 제대로 일이 진행되는지 추적하는 것이다. 따라서 \", React.createElement(_components.strong, null, \"맡긴 일에 대한 상태를 정기적으로 확인하는 Action\"), \"을 만들어야 한다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"퍼스널-칸반\"\n  }, React.createElement(_components.a, {\n    href: \"#퍼스널-칸반\"\n  }, \"퍼스널 칸반\")), \"\\n\", React.createElement(_components.p, null, \"할 일을 정리하는 것은 GTD를 통해 할 수 있다. 하지만 할 일을 추적하고 진행 상황을 파악하는 것은 GTD로는 어렵다. 이때 사용할 수 있는 것이 퍼스널 칸반이다. 퍼스널 칸반은 \", React.createElement(_components.strong, null, \"할 일을 추적하고 진행 상황을 파악\"), \"하는 것을 도와준다.\"), \"\\n\", React.createElement(_components.p, null, \"퍼스널 칸반이란 기존에 \", React.createElement(_components.strong, null, \"애자일이라는 방법론\"), \"을 실현하는 칸반이라는 도구를 \", React.createElement(_components.strong, null, \"개인의 삶\"), \"에 적용하는 것을 말한다. GTD에서 Action이 담긴 할 일 목록을 관리할 때 퍼스널 칸반을 이용할 수 있다. 또한, 칸반이라는 도구 자체가 이해가 쉽기 때문에 누구나 쉽게 적용할 수 있다는 장점도 있다.\"), \"\\n\", React.createElement(\"h3\", null, \"개인화된 작업 흐름\"), \"\\n\", React.createElement(_components.p, null, \"퍼스널 칸반을 이용하면 개인화된 작업 흐름을 만들 수 있다. 작업 흐름은 자신의 성향, 업무에 따라 달라질 수 있다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/personal-workflow.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"작업 흐름은 필요에 따라 언제든지 바꿀 수 있다. 만약 회사와 같은 조직에서 사용한다면 쉽게 바꿀 수 없겠지만 말 그대로 \", React.createElement(_components.strong, null, \"개인용\"), \"이기 때문에 전혀 문제되지 않는다.\"), \"\\n\", React.createElement(\"h3\", null, \"필요한 만큼 정리하기\"), \"\\n\", React.createElement(_components.p, null, \"조직에선 가능한 상세하게 정리하는 것이 중요하게 여겨질 때가 많다. 하지만 보통 할 일에 대한 정보는 본인 머릿속에 있기 때문에 \", React.createElement(_components.strong, null, \"개인용\"), \"으로 사용하는 퍼스널 칸반에선 내가 꼭 기억해야하는 것만 정리해두면 된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/personal-information.png\",\n    width: 500\n  }), \"\\n\", React.createElement(\"h3\", null, \"회고\"), \"\\n\", React.createElement(_components.p, null, \"만약 회고가 필요하다고 느껴진다면 기존 애자일 방법론처럼 진행할 수 있다. 회고 주기는 스스로 정할 수 있다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2023-07-10-effective-work/retrospective.png\",\n    width: 500\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"예상-질문에-대한-답변\"\n  }, React.createElement(_components.a, {\n    href: \"#예상-질문에-대한-답변\"\n  }, \"예상 질문에 대한 답변\")), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q1. 저는 할 일이 많지 않은데 이런게 필요할까요?\"), \"\\n머리 속에 담아둔 정보만으로 관리가 가능하다면 굳이 필요 없습니다. 예를 들어, 하루 루틴만 지키면 되는 업무라면 크게 필요 없을 수 있습니다. 오히려 시간 낭비가 될 수 있으니 나중에 할 일이 많아졌을 때 사용해보세요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q2. 위임한 일은 어떻게 추적하는게 좋을까요?\"), \"\\n일이 끝날 것 같은 예상 날짜에 실행할 수 있도록 할 일 목록에 추가하세요. 그리고 해당 날짜가 되면 물어보면 됩니다. 일이 끝났다면 그대로 완료하면 되고 끝나지 않았다면 추후 다시 물어볼 수 있도록 할 일 목록에 다시 추가하세요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q3. 회고는 어떻게 하는 것이 좋을까요?\"), \"\\nKPT처럼 이미 잘 구분된 프레임워크를 사용할 수 있습니다. 혹은 질문 리스트를 만들 수 있습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ex) 어떤 일이 어려웠다면 왜 어려웠을까?\"), \"\\n\", React.createElement(_components.li, null, \"ex) 일이 예상한 시간 안에 끝났을까?\"), \"\\n\", React.createElement(_components.li, null, \"ex) 일을 제대로 끝낸 것이 맞을까?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q4. Things는 어떻게 모을까요?\"), \"\\nThings는 나와 관련된 모든 일이라고 볼 수 있습니다. 회사 업무, 버킷리스트, 읽어보고 싶었던 책, 만남 약속, 집안 일, 게임 이 모든 것은 Things가 될 수 있습니다. 정리가 필요하다면 날을 잡고 생각나는 모든 것을 모아보는 것도 괜찮습니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q5. Action이 될 수 있는지 판단이 어려워요\"), \"\\nAction은 구체적이고 가시적이어야 합니다. 기준은 내가 지금 행동해서 시작할 수 있는 일인지로 판단하면 됩니다. 예를 들어, '살 빼기'라는 일은 언뜻 바로 할 수 있는 일처럼 보이지만 무엇을 해야 할지 알 수 없기 때문에 '2km 운동장 뛰기' 같이 가시적으로 만들어야 합니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"h3\", null, \"Q6. 어떤 일이 단순한 일인 걸까요?\"), \"\\n우선 가장 중요한 조건은 우선순위를 고려하지 않았을 때 '지금 바로 실행할 수 있는가?'입니다. 그리고 다른 일에 의존되어있지 않고 길어도 수 시간 내에 처리할 수 있는 일이라면 단순한 일이라고 할 수 있습니다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")), \"\\n\", React.createElement(_components.p, null, \"필자는 이 자료를 작성하며 \", React.createElement(_components.strong, null, \"할 일 잘하기 매니페스토\"), \"라는 것을 만들었다. 내용은 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"형식 보다는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">원칙을</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.li, null, \"도구 보다는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">습관을</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.li, null, \"정리 보다는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">실행을</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.li, null, \"암기 보다는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">기록을</code>\"\n    }\n  })), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"부끄럽지만 일을 정리할 때 항상 위 내용을 생각하면 더 잘 될 것이라 생각한다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 이 글은 이전에 사내에서 발표한 자료를 글로서 다시 정리하고 부족한 내용을 추가한 글이다. 만약 발표 자료가 궁금하다면 아래 슬라이드를 참고하길 바란다. 그럼 우리 모두 갓생살자!\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      left: 0,\n      width: '100%',\n      height: 0,\n      position: 'relative',\n      paddingBottom: '56.1972%'\n    }\n  }, React.createElement(\"iframe\", {\n    src: \"https://present.do/documents/636feb9f624b9908aaa72bc3/embed?dp=false&da=false&ddt=false&page=0&dps=false&dpm=false&dpmm=false&dpc=false&dv=true&dpt=false&dc=true&dpl=false&df=false\",\n    style: {\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      border: 0\n    },\n    allowfullscreen: true,\n    scrolling: \"no\",\n    allow: \"encrypted-media;\"\n  })));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","blockquote","a","h1","h2","h3","ul","li","span","ol","_provideComponents","components","React","href","rel","Image","src","caption","id","dangerouslySetInnerHTML","__html","expandable","width","style","left","height","position","paddingBottom","top","border","allowfullscreen","scrolling","allow","wrapper","MDXLayout","_ref","maxWidth","isExpanded","toggleExpanded","useState","___EmotionJSX","cursor","onClick","undefined","ReactDOM","backgroundColor","borderRadius","transform","document","body"],"sourceRoot":""}