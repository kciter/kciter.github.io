{"version":3,"file":"component---src-pages-writing-tsx-3b0fa709f70f8761d49c.js","mappings":"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","sources":["webpack://kciter.so/./node_modules/.pnpm/dayjs@1.11.10/node_modules/dayjs/plugin/localizedFormat.js","webpack://kciter.so/./src/components/SEO/index.tsx","webpack://kciter.so/./src/pages/writing.tsx"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_localizedFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t=\"YYYY-MM-DDTHH:mm:ssZ\");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  imagePath?: string;\n  meta?: any;\n}\n\nconst SEO = ({ title, description, meta }: SEOProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        ko: \"ko\",\n      }}\n      title={metaTitle}\n      titleTemplate={title ? `%s | kciter.so` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `author`,\n          content: `Lee Sun-Hyoup`,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:site_name`,\n          content: `kciter.so`,\n        },\n        {\n          property: `og:locale`,\n          content: `ko_KR`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: \"Sunhyoup Lee\",\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content:\n            meta.find((item: any) => item.property === \"og:image\")?.content ??\n            \"https://kciter.so/images/og.png\",\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\nimport DefaultTemplate from \"@templates/default\";\nimport SEO from \"@components/SEO\";\nimport dayjs from \"dayjs\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\ndayjs.extend(require(\"dayjs/plugin/localizedFormat\"));\n\nconst Index = () => {\n  const result = useStaticQuery(graphql`\n    {\n      allMdx(\n        sort: { fields: { date: DESC } }\n        filter: {\n          fields: { type: { eq: \"post\" } }\n          frontmatter: { draft: { ne: true }, hide: { ne: true } }\n        }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              timeToRead {\n                minutes\n              }\n              date\n              slug\n            }\n            frontmatter {\n              tags\n              title\n              image\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = result.allMdx.edges;\n\n  return (\n    <DefaultTemplate>\n      <SEO title=\"Writing\" />\n\n      {posts.map((post: any) => (\n        <Post key={post.node.fields.slug}>\n          <PostMeta>\n            <Inner>\n              <PostDate>\n                {dayjs(post.node.fields.date).locale(\"en\").format(\"ll\")}\n              </PostDate>\n              <PostClock>\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\" />{\" \"}\n                {Math.round(post.node.fields.timeToRead.minutes)} minute read\n              </PostClock>\n            </Inner>\n          </PostMeta>\n          <PostContent recent={dayjs(post.node.fields.date).isAfter(dayjs().subtract(1, \"month\"))}>\n            <Inner style={{\n              transform: post.node.frontmatter.tags.length > 0 ? \"translateY(-14px)\" : \"translateY(-10px)\"\n            }}>\n              <PostDateMobile>\n                {dayjs(post.node.fields.date).locale(\"en\").format(\"ll\")}\n              </PostDateMobile>\n              {post.node.frontmatter.tags.length > 0 && (\n                <PostTags>\n                  {post.node.frontmatter.tags.map((tag: string) => (\n                    <PostTag key={tag}>\n                      {tag}\n                    </PostTag>\n                  ))}\n                </PostTags>\n              )}\n              <PostTitle>\n                <Link to={post.node.fields.slug}>{post.node.frontmatter.title}</Link>\n              </PostTitle>\n              <PostDescription>\n                {post.node.excerpt} <a href={post.node.fields.slug}>Read more</a>\n              </PostDescription>\n              <Link to={post.node.fields.slug}>\n                <ThumbnailImage src={post.node.frontmatter.image} />\n              </Link>\n            </Inner>\n          </PostContent>\n        </Post>\n      ))}\n    </DefaultTemplate>\n  );\n};\n\nexport default Index;\n\nconst Post = styled.div`\n  display: flex;\n  /* width: 90%; */\n  height: 500px;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n  line-height: 26px;\n\n  @media (max-width: 768px) {\n    height: 440px;\n  }\n`\n\nconst PostMeta = styled.div`\n  width: 15%;\n  padding-right: 24px;\n  text-align: right;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst PostDate = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: #444;\n`\n\nconst PostDateMobile = styled.div`\n  display: none;\n  font-size: 14px;\n  font-weight: bold;\n  color: #444;\n  margin-bottom: 4px;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`\n\nconst PostClock = styled.div`\n  font-size: 10px;\n  color: #aaa;\n  line-height: 1.6;\n`\n\nconst PostContent = styled.div<{ recent: boolean }>`\n  position: relative;\n  flex: 1;\n  padding-left: 24px;\n  border-left: 1px solid #ddd;\n\n  &::before {\n    background: ${(props) => props.recent ? '#00a962' : '#888'};\n    border: 1px solid #eee;\n    content: \"\";\n    display: block;\n    height: 10px;\n    left: -7px;\n    position: absolute;\n    top: -4px;\n    width: 10px;\n    border-radius: 12px;\n\n    box-shadow: ${(props) => props.recent ? 'rgb(51, 217, 178) 0px 0px 0px 0px' : 'none'};\n    animation: ${(props) => props.recent ? '2s ease 0s infinite normal none running pulse' : 'none'};\n\n    @keyframes pulse {\n      0% {\n        transform: scale(0.95);\n        box-shadow: rgba(51, 217, 178, 0.7) 0px 0px 0px 0px;\n      }\n      70% {\n        transform: scale(1);\n        box-shadow: rgba(51, 217, 178, 0) 0px 0px 0px 10px;\n      }\n      100% {\n        transform: scale(0.95);\n        box-shadow: rgba(51, 217, 178, 0) 0px 0px 0px 0px;\n      }\n    }\n  }\n`\n\nconst PostTags = styled.div`\n  display: block;\n  width: 100%;\n  margin-bottom: 8px;\n`\n\nconst PostTag = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 16px;\n  padding: 0 8px;\n  margin-right: 4px;\n  font-size: 9px;\n  color: #888;\n  border-radius: 50px;\n  border: 1px solid #dfe3e8;\n  /* cursor: pointer; */\n  word-wrap: normal;\n  word-break: keep-all;\n  background-color: white;\n`\n\nconst PostTitle = styled.h1`\n  font-size: 20px;\n  border: none;\n  margin: 0;\n  margin-bottom: 16px;\n  padding: 0;\n`\n\nconst PostDescription = styled.p`\n  font-size: 14px;\n  line-height: 1.4;\n`\n\nconst ThumbnailImage = styled.img`\n  border-radius: 8px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n`\n\nconst Inner = styled.div`\n  display: block;\n  transform: translateY(-10px);\n\n  @media (max-width: 768px) {\n    transform: translateY(-12px) !important;\n  }\n`"],"names":["module","exports","e","LTS","LT","L","LL","LLL","LLLL","t","o","n","r","prototype","i","format","en","formats","this","$locale","replace","toUpperCase","slice","call","SEO","_ref","_site$siteMetadata","_meta$find$content","_meta$find","title","description","meta","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","___EmotionJSX","Helmet","htmlAttributes","ko","titleTemplate","undefined","name","content","property","find","item","concat","defaultProps","lang","dayjs","require","Index","posts","allMdx","edges","DefaultTemplate","map","post","Post","key","node","fields","slug","PostMeta","Inner","PostDate","date","locale","PostClock","className","Math","round","timeToRead","minutes","PostContent","recent","isAfter","subtract","style","transform","frontmatter","tags","length","PostDateMobile","PostTags","tag","PostTag","PostTitle","Link","to","PostDescription","excerpt","href","ThumbnailImage","src","image","_styled","target","styles","props"],"sourceRoot":""}