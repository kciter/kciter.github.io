{"version":3,"file":"component---src-pages-index-tsx-8621fb500c5f6b68af08.js","mappings":"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","sources":["webpack://kciter.so/./src/components/RelatedPost/index.tsx","webpack://kciter.so/./src/components/SEO/index.tsx","webpack://kciter.so/./src/components/Bio/index.tsx","webpack://kciter.so/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\ninterface RelatedPostProps {\n  posts: any;\n  current?: string;\n  style?: React.CSSProperties;\n}\n\nconst RelatedPost = ({ posts, current, style }: RelatedPostProps) => {\n  return (\n    <Container style={style}>\n      <Posts>\n        {posts.map(\n          (post: any) =>\n            post.node.fields.slug !== current && (\n              <Post to={post.node.fields.slug} key={post.node.fields.slug}>\n                <img src={post.node.frontmatter.image} />\n                <Title>{post.node.frontmatter.title}</Title>\n                <small>{post.node.fields.date}</small>\n              </Post>\n            )\n        )}\n      </Posts>\n    </Container>\n  );\n};\n\nexport default RelatedPost;\n\nconst Container = styled.div`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n`;\n\nconst Posts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  row-gap: 20px;\n  column-gap: 20px;\n\n  @media (max-width: 30rem) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Post = styled(Link)`\n  img {\n    display: block;\n    height: 140px;\n    object-fit: cover;\n    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.05);\n\n    @media (max-width: 30rem) {\n      width: 100%;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  position: relative;\n  display: block;\n  transition: all 333ms ease 0s;\n  text-decoration: none;\n\n  @media (max-width: 768px) {\n    margin-top: -12px !important;\n  }\n\n  transform: scale3d(1, 1, 1);\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n    transform: scale(1.06);\n    transition: opacity 2s cubic-bezier(0.165, 0.84, 0.44, 1);\n    box-shadow:\n      0 8px 17px 0 rgba(0, 0, 0, 0.2),\n      0 6px 20px 0 rgba(0, 0, 0, 0.15);\n    content: '';\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover {\n    transform: scale3d(1.006, 1.006, 1);\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  /* &::before {\n    content: \"\";\n    border-radius: 16px;\n    display: block;\n    position: absolute;\n    z-index: -1;\n    inset: -2px;\n    opacity: 0;\n    transform: scale(0.9);\n    transition: all 333ms ease 0s;\n  }\n\n  &:hover::before {\n    opacity: 1;\n    background: linear-gradient(\n      135deg,\n      rgba(234, 234, 234, 0.7) 0%,\n      rgba(244, 244, 244, 0.7) 100%\n    );\n    transform: scale(1.04);\n  } */\n`;\n\nconst Title = styled.div`\n  margin-top: 12px;\n  /* font-family: serif; */\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 100;\n`;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SEOProps {\n  children?: React.ReactNode;\n  title?: string;\n  description?: string;\n}\n\nconst SEO = ({ children, title, description }: SEOProps) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <>\n      <html lang=\"ko\" />\n\n      {/* Font */}\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Quattrocento+Sans\" />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n      />\n\n      {/* SEO */}\n      <title id=\"title\">{metaTitle}</title>\n\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta charSet=\"utf-8\" />\n      <meta name=\"robots\" content=\"index,follow\" />\n      <meta name=\"googlebot\" content=\"index,follow\" />\n      <meta name=\"color-scheme\" content=\"light\" />\n\n      <meta id=\"description\" name=\"description\" content={metaDescription} />\n      <meta id=\"og:title\" property=\"og:title\" content={metaTitle} />\n      <meta id=\"og:description\" property=\"og:description\" content={metaDescription} />\n      <meta id=\"og:type\" property=\"og:type\" content=\"website\" />\n      <meta id=\"og:site_name\" property=\"og:site_name\" content=\"kciter.so\" />\n      <meta id=\"og:locale\" property=\"og:locale\" content=\"ko_KR\" />\n      <meta id=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      <meta id=\"twitter:creator\" name=\"twitter:creator\" content=\"Sunhyoup Lee\" />\n      <meta id=\"twitter:title\" name=\"twitter:title\" content={metaTitle} />\n      <meta id=\"twitter:description\" name=\"twitter:description\" content={metaDescription} />\n      <meta id=\"og:image\" property=\"og:image\" content=\"https://kciter.so/images/og.png\" />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React from 'react';\n\nconst Bio = () => {\n  return (\n    <div className=\"member-container\">\n      <div className=\"avatar\">\n        <img src=\"/images/about/avatar.jpg\" />\n      </div>\n\n      <div className=\"summary\">\n        <div className=\"name\">이선협</div>\n        <div className=\"description\">그냥 개발자</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport RelatedPost from '@components/RelatedPost';\nimport Bio from '@components/Bio';\nimport { graphql, Link, PageProps, useStaticQuery } from 'gatsby';\n\nconst Index = () => {\n  const result = useStaticQuery(graphql`\n    {\n      allMdx(\n        limit: 9\n        sort: { fields: { date: DESC } }\n        filter: {\n          fields: { type: { eq: \"post\" } }\n          frontmatter: { draft: { ne: true }, hide: { ne: true } }\n        }\n      ) {\n        edges {\n          node {\n            fields {\n              date\n              slug\n            }\n            frontmatter {\n              title\n              image\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = result.allMdx.edges;\n\n  return (\n    <DefaultTemplate>\n      <Bio />\n\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: 8\n        }}\n      >\n        <h3 style={{ letterSpacing: 2, margin: 0, fontSize: 18 }}>RECENT POSTS</h3>\n        <Link\n          to=\"/writing\"\n          style={{\n            fontSize: 14,\n            fontWeight: 500,\n            textDecoration: 'none',\n            // backgroundSize: \"100%\",\n            // backgroundRepeat: \"repeat\",\n            // backgroundClip: \"text\",\n            // backgroundImage:\n            //   \"linear-gradient(90deg, #80D0F2 0%, #5C82FF 50%, #C480FF 100%)\",\n            cursor: 'pointer'\n            // WebkitTextFillColor: \"transparent\",\n          }}\n        >\n          All posts ▸\n        </Link>\n      </div>\n\n      {posts && <RelatedPost posts={posts} style={{ padding: 0, paddingTop: 10 }} />}\n    </DefaultTemplate>\n  );\n};\n\nexport const Head = () => {\n  return <SEO />;\n};\n\nexport default Index;\n"],"names":["_ref","posts","current","style","___EmotionJSX","Container","Posts","map","post","node","fields","slug","Post","to","key","src","frontmatter","image","Title","title","date","_styled","target","name","styles","Link","_site$siteMetadata","children","description","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","React","lang","rel","href","id","content","charSet","property","Bio","className","Head","SEO","Index","allMdx","edges","DefaultTemplate","display","justifyContent","marginBottom","letterSpacing","margin","fontSize","fontWeight","textDecoration","cursor","RelatedPost","padding","paddingTop"],"sourceRoot":""}