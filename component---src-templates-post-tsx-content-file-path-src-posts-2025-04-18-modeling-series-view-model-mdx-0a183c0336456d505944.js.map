{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-posts-2025-04-18-modeling-series-view-model-mdx-0a183c0336456d505944.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2025-04-18-modeling-series-view-model.mdx","webpack://kciter.so/./src/templates/post.tsx","webpack://kciter.so/./src/components/Image/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"들어가며\"\n  }, React.createElement(_components.a, {\n    href: \"#들어가며\"\n  }, \"들어가며\")), \"\\n\", React.createElement(_components.p, null, \"모델링 시리즈의 첫 번째 주제는 뷰모델(ViewModel)이다. 우리는 흔히 API를 만들 때, 사용자가 보게 될 화면(View)에 어떤 데이터를 보여줄지 고민한다. 이때 단순히 데이터를 전달하는 것이 아니라, \", React.createElement(_components.strong, null, \"화면을 구성하는 데 필요한 정보들을 어떻게 구조화해서 전달할지\"), \"를 결정하는 것이 바로 뷰모델을 설계하는 일이다.\"), \"\\n\", React.createElement(_components.p, null, \"대부분의 경우 화면은 서버에서 직접 그려지지 않는다. 우리는 보통 \", React.createElement(_components.strong, null, \"JSON 형태의 응답\"), \"을 내려주고, \", React.createElement(_components.strong, null, \"클라이언트가 그 JSON을 해석해 화면을 구성\"), \"한다. 이 JSON은 단순한 데이터 덩어리가 아니다. \", React.createElement(_components.strong, null, \"'화면의 구조와 상태를 표현하기 위한 모델'\"), \", 즉 \", React.createElement(_components.strong, null, \"뷰모델\"), \"이다.\"), \"\\n\", React.createElement(_components.p, null, \"아마 많은 경우 뷰모델을 ‘별도로 설계하고 있다’는 자각 없이, 그냥 DB에서 가져온 도메인 모델을 그대로 넘기거나, DTO로 전달하고 있을지도 모른다. 하지만 우리가 클라이언트에 전달한 JSON을 클라이언트가 어떻게 해석할지 명확하지 않다면, 그건 제대로 설계된 뷰모델이 아니다.\"), \"\\n\", React.createElement(_components.p, null, \"뷰모델이란 결국, **“이 화면이 어떤 구조로 그려져야 하는지에 대한 선언”**이다.\"), \"\\n\", React.createElement(_components.p, null, \"이 글에서는 단순한 데이터 전달을 넘어서, \", React.createElement(_components.strong, null, \"서버가 의도를 담아 '구조를 선언하는 방식'으로 뷰모델을 설계해야 하는 이유\"), \"를 다양한 예시와 함께 살펴보려 한다.\"), \"\\n\", React.createElement(_components.p, null, \"모델링 시리즈의 첫 번째 주제는 바로 뷰 모델(View Model)이다. 우리는 **사용자가 보게 될 화면(View)**을 어떻게 표현할지 고민하고, 그에 맞는 구조화된 데이터를 내려준다.\"), \"\\n\", React.createElement(_components.p, null, \"보통 직접 뷰를 그리는 것이 아니라면 대부분 JSON 형태로 내려준다. 이때 JSON 형태로 내려주는 데이터가 바로 뷰 모델이다. 어쩌면 인지하지 못했을 수도 있다. 하지만 우리가 내려준 JSON 데이터는 어떻게 그려질지 아직 미지수다. 클라이언트는 데이터를 보고 어떻게 그릴지 결정한다. 즉, 뷰에 대한 모델이기 때문에 뷰 모델이다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kciter/project/blog/src/posts/2025-04-18-modeling-series-view-model.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport dayjs from 'dayjs';\nimport PostFooter from '@components/PostFooter';\nimport RelatedPost from '@components/RelatedPost';\nimport TableOfContents from '@components/TableOfContents';\nimport {Helmet} from 'react-helmet';\nimport $ from 'jquery';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport Series from '@components/Series';\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\ndayjs.extend(require('dayjs/plugin/localizedFormat'));\nconst PostTemplate = _ref => {\n  let {data, location, pageContext, children} = _ref;\n  const {tableOfContents, fields, frontmatter, excerpt} = data.mdx;\n  const {series} = pageContext;\n  const author = 'Lee Sun-Hyoup';\n  const date = dayjs(fields.date).locale('ko').format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: \"\" + location.href + frontmatter.image,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': location.href\n    },\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    url: location.href,\n    description: excerpt,\n    '@type': 'BlogPosting',\n    '@context': 'https://schema.org'\n  };\n  useEffect(() => {\n    if (typeof document === undefined) return;\n    $(function () {\n      $('.post-container a[data-footnote-ref]').each((_, item) => {\n        var _$$attr;\n        const href = (_$$attr = $(item).attr('href')) === null || _$$attr === void 0 ? void 0 : _$$attr.slice(1);\n        const text = $('#' + href).text().replace('↩', '');\n        $(item).attr('data-tooltip', text);\n      });\n    });\n  }, []);\n  console.log(series.items);\n  const {0: posts, 1: setPosts} = useState();\n  useEffect(() => {\n    setPosts(data.allMdx.edges.filter(item => item.node.fields.slug !== fields.slug).sort(() => Math.random() - 0.5).slice(0, 6));\n  }, []);\n  const draft = frontmatter.draft && process.env.NODE_ENV !== 'development';\n  return ___EmotionJSX(DefaultTemplate, null, ___EmotionJSX(SEO, {\n    title: frontmatter.title,\n    description: excerpt,\n    meta: [{\n      name: \"article:published_time\",\n      content: dayjs(fields.date).locale('ko').format()\n    }, {\n      name: \"image\",\n      content: \"https://kciter.so\" + frontmatter.image\n    }, {\n      property: \"og:image\",\n      content: \"https://kciter.so\" + frontmatter.image\n    }, {\n      property: \"og:image:secure_url\",\n      content: \"https://kciter.so\" + frontmatter.image\n    }]\n  }), ___EmotionJSX(Helmet, null, ___EmotionJSX(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(applicationLdJson))), ___EmotionJSX(\"h1\", {\n    className: \"post-title\"\n  }, frontmatter.title), ___EmotionJSX(\"span\", {\n    className: \"post-date\"\n  }, \"Written on \", dayjs(fields.date).locale('en').format('LL')), frontmatter.image && ___EmotionJSX(\"img\", {\n    src: frontmatter.image,\n    style: {\n      width: '100%'\n    }\n  }), draft || tableOfContents.items && ___EmotionJSX(TableOfContents, {\n    items: tableOfContents.items\n  }), draft || (series === null || series === void 0 ? void 0 : series.items) && ___EmotionJSX(Series, {\n    title: series.title,\n    items: series.items,\n    currentItem: frontmatter.title\n  }), ___EmotionJSX(\"div\", {\n    className: \"post-content\"\n  }, draft ? ___EmotionJSX(NotYetPublished, null, \"Not yet published\") : children), ___EmotionJSX(PostFooter, {\n    tags: frontmatter.tags,\n    comment: frontmatter.comments\n  }), posts && ___EmotionJSX(RelatedPost, {\n    posts: posts,\n    current: fields.slug\n  }));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2550809065\";\nconst NotYetPublished = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1jwq6fl0\"\n} : {\n  target: \"e1jwq6fl0\",\n  label: \"NotYetPublished\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\"\n} : {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rY2l0ZXIvcHJvamVjdC9ibG9nL3NyYy90ZW1wbGF0ZXMvcG9zdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEtrQyIsImZpbGUiOiIvVXNlcnMva2NpdGVyL3Byb2plY3QvYmxvZy9zcmMvdGVtcGxhdGVzL3Bvc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdyYXBocWwsIFBhZ2VQcm9wcywgdXNlU3RhdGljUXVlcnkgfSBmcm9tICdnYXRzYnknO1xuaW1wb3J0IERlZmF1bHRUZW1wbGF0ZSBmcm9tICdAdGVtcGxhdGVzL2RlZmF1bHQnO1xuaW1wb3J0IFNFTyBmcm9tICdAY29tcG9uZW50cy9TRU8nO1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcbmltcG9ydCBQb3N0Rm9vdGVyIGZyb20gJ0Bjb21wb25lbnRzL1Bvc3RGb290ZXInO1xuaW1wb3J0IFJlbGF0ZWRQb3N0IGZyb20gJ0Bjb21wb25lbnRzL1JlbGF0ZWRQb3N0JztcbmltcG9ydCBUYWJsZU9mQ29udGVudHMgZnJvbSAnQGNvbXBvbmVudHMvVGFibGVPZkNvbnRlbnRzJztcbmltcG9ydCB7IEhlbG1ldCB9IGZyb20gJ3JlYWN0LWhlbG1ldCc7XG5pbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2VyaWVzIGZyb20gJ0Bjb21wb25lbnRzL1Nlcmllcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmRheWpzLmV4dGVuZChyZXF1aXJlKCdkYXlqcy9wbHVnaW4vbG9jYWxpemVkRm9ybWF0JykpO1xuXG5jb25zdCBQb3N0VGVtcGxhdGUgPSAoeyBkYXRhLCBsb2NhdGlvbiwgcGFnZUNvbnRleHQsIGNoaWxkcmVuIH06IFBhZ2VQcm9wcykgPT4ge1xuICBjb25zdCB7IHRhYmxlT2ZDb250ZW50cywgZmllbGRzLCBmcm9udG1hdHRlciwgZXhjZXJwdCB9ID0gKGRhdGEgYXMgYW55KS5tZHg7XG5cbiAgY29uc3QgeyBzZXJpZXMgfSA9IHBhZ2VDb250ZXh0IGFzIGFueTtcblxuICBjb25zdCBhdXRob3IgPSAnTGVlIFN1bi1IeW91cCc7XG4gIGNvbnN0IGRhdGUgPSBkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdrbycpLmZvcm1hdCgpO1xuICBjb25zdCBhcHBsaWNhdGlvbkxkSnNvbiA9IHtcbiAgICBoZWFkbGluZTogZnJvbnRtYXR0ZXIudGl0bGUsXG4gICAgZGF0ZU1vZGlmaWVkOiBkYXRlLFxuICAgIGRhdGVQdWJsaXNoZWQ6IGRhdGUsXG4gICAgaW1hZ2U6IGAke2xvY2F0aW9uLmhyZWZ9JHtmcm9udG1hdHRlci5pbWFnZX1gLFxuICAgIG1haW5FbnRpdHlPZlBhZ2U6IHtcbiAgICAgICdAdHlwZSc6ICdXZWJQYWdlJyxcbiAgICAgICdAaWQnOiBsb2NhdGlvbi5ocmVmXG4gICAgfSxcbiAgICBhdXRob3I6IHsgJ0B0eXBlJzogJ1BlcnNvbicsIG5hbWU6IGF1dGhvciB9LFxuICAgIHVybDogbG9jYXRpb24uaHJlZixcbiAgICBkZXNjcmlwdGlvbjogZXhjZXJwdCxcbiAgICAnQHR5cGUnOiAnQmxvZ1Bvc3RpbmcnLFxuICAgICdAY29udGV4dCc6ICdodHRwczovL3NjaGVtYS5vcmcnXG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgICQoZnVuY3Rpb24gKCkge1xuICAgICAgJCgnLnBvc3QtY29udGFpbmVyIGFbZGF0YS1mb290bm90ZS1yZWZdJykuZWFjaCgoXywgaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBocmVmID0gJChpdGVtKS5hdHRyKCdocmVmJyk/LnNsaWNlKDEpO1xuICAgICAgICBjb25zdCB0ZXh0ID0gJCgnIycgKyBocmVmKVxuICAgICAgICAgIC50ZXh0KClcbiAgICAgICAgICAucmVwbGFjZSgn4oapJywgJycpO1xuXG4gICAgICAgICQoaXRlbSkuYXR0cignZGF0YS10b29sdGlwJywgdGV4dCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIGNvbnNvbGUubG9nKHNlcmllcy5pdGVtcyk7XG5cbiAgY29uc3QgW3Bvc3RzLCBzZXRQb3N0c10gPSB1c2VTdGF0ZSgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFBvc3RzKFxuICAgICAgKGRhdGEgYXMgYW55KS5hbGxNZHguZWRnZXNcbiAgICAgICAgLmZpbHRlcigoaXRlbTogYW55KSA9PiBpdGVtLm5vZGUuZmllbGRzLnNsdWcgIT09IGZpZWxkcy5zbHVnKVxuICAgICAgICAuc29ydCgoKSA9PiBNYXRoLnJhbmRvbSgpIC0gMC41KVxuICAgICAgICAuc2xpY2UoMCwgNilcbiAgICApO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZHJhZnQgPSBmcm9udG1hdHRlci5kcmFmdCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ2RldmVsb3BtZW50JztcblxuICByZXR1cm4gKFxuICAgIDxEZWZhdWx0VGVtcGxhdGU+XG4gICAgICA8U0VPXG4gICAgICAgIHRpdGxlPXtmcm9udG1hdHRlci50aXRsZX1cbiAgICAgICAgZGVzY3JpcHRpb249e2V4Y2VycHR9XG4gICAgICAgIG1ldGE9e1tcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBgYXJ0aWNsZTpwdWJsaXNoZWRfdGltZWAsXG4gICAgICAgICAgICBjb250ZW50OiBkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdrbycpLmZvcm1hdCgpXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBgaW1hZ2VgLFxuICAgICAgICAgICAgY29udGVudDogYGh0dHBzOi8va2NpdGVyLnNvJHtmcm9udG1hdHRlci5pbWFnZX1gXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwcm9wZXJ0eTogYG9nOmltYWdlYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2tjaXRlci5zbyR7ZnJvbnRtYXR0ZXIuaW1hZ2V9YFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgcHJvcGVydHk6IGBvZzppbWFnZTpzZWN1cmVfdXJsYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2tjaXRlci5zbyR7ZnJvbnRtYXR0ZXIuaW1hZ2V9YFxuICAgICAgICAgIH1cbiAgICAgICAgXX1cbiAgICAgIC8+XG5cbiAgICAgIDxIZWxtZXQ+XG4gICAgICAgIDxzY3JpcHQgdHlwZT1cImFwcGxpY2F0aW9uL2xkK2pzb25cIj57SlNPTi5zdHJpbmdpZnkoYXBwbGljYXRpb25MZEpzb24pfTwvc2NyaXB0PlxuICAgICAgPC9IZWxtZXQ+XG5cbiAgICAgIDxoMSBjbGFzc05hbWU9XCJwb3N0LXRpdGxlXCI+e2Zyb250bWF0dGVyLnRpdGxlfTwvaDE+XG5cbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInBvc3QtZGF0ZVwiPldyaXR0ZW4gb24ge2RheWpzKGZpZWxkcy5kYXRlKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdMTCcpfTwvc3Bhbj5cblxuICAgICAge2Zyb250bWF0dGVyLmltYWdlICYmIDxpbWcgc3JjPXtmcm9udG1hdHRlci5pbWFnZX0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fSAvPn1cblxuICAgICAge2RyYWZ0IHx8ICh0YWJsZU9mQ29udGVudHMuaXRlbXMgJiYgPFRhYmxlT2ZDb250ZW50cyBpdGVtcz17dGFibGVPZkNvbnRlbnRzLml0ZW1zfSAvPil9XG5cbiAgICAgIHtkcmFmdCB8fFxuICAgICAgICAoc2VyaWVzPy5pdGVtcyAmJiAoXG4gICAgICAgICAgPFNlcmllcyB0aXRsZT17c2VyaWVzLnRpdGxlfSBpdGVtcz17c2VyaWVzLml0ZW1zfSBjdXJyZW50SXRlbT17ZnJvbnRtYXR0ZXIudGl0bGV9IC8+XG4gICAgICAgICkpfVxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3QtY29udGVudFwiPlxuICAgICAgICB7ZHJhZnQgPyA8Tm90WWV0UHVibGlzaGVkPk5vdCB5ZXQgcHVibGlzaGVkPC9Ob3RZZXRQdWJsaXNoZWQ+IDogY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cblxuICAgICAgPFBvc3RGb290ZXIgdGFncz17ZnJvbnRtYXR0ZXIudGFnc30gY29tbWVudD17ZnJvbnRtYXR0ZXIuY29tbWVudHN9IC8+XG5cbiAgICAgIHtwb3N0cyAmJiA8UmVsYXRlZFBvc3QgcG9zdHM9e3Bvc3RzfSBjdXJyZW50PXtmaWVsZHMuc2x1Z30gLz59XG4gICAgPC9EZWZhdWx0VGVtcGxhdGU+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb3N0VGVtcGxhdGU7XG5cbmV4cG9ydCBjb25zdCBwYWdlUXVlcnkgPSBncmFwaHFsYFxuICBxdWVyeSBQb3N0QnlTbHVnKCRzbHVnOiBTdHJpbmchKSB7XG4gICAgc2l0ZSB7XG4gICAgICBzaXRlTWV0YWRhdGEge1xuICAgICAgICB0aXRsZVxuICAgICAgfVxuICAgIH1cbiAgICBtZHgoZmllbGRzOiB7IHNsdWc6IHsgZXE6ICRzbHVnIH0gfSkge1xuICAgICAgYm9keVxuICAgICAgdGFibGVPZkNvbnRlbnRzXG4gICAgICBleGNlcnB0XG4gICAgICBmaWVsZHMge1xuICAgICAgICBzbHVnXG4gICAgICAgIGRhdGVcbiAgICAgIH1cbiAgICAgIGZyb250bWF0dGVyIHtcbiAgICAgICAgdGl0bGVcbiAgICAgICAgY2F0ZWdvcmllc1xuICAgICAgICB0YWdzXG4gICAgICAgIGltYWdlXG4gICAgICAgIGNvbW1lbnRzXG4gICAgICAgIGRyYWZ0XG4gICAgICB9XG4gICAgfVxuICAgIGFsbE1keChcbiAgICAgIGZpbHRlcjoge1xuICAgICAgICBmaWVsZHM6IHsgdHlwZTogeyBlcTogXCJwb3N0XCIgfSB9XG4gICAgICAgIGZyb250bWF0dGVyOiB7IGRyYWZ0OiB7IG5lOiB0cnVlIH0sIGhpZGU6IHsgbmU6IHRydWUgfSB9XG4gICAgICB9XG4gICAgKSB7XG4gICAgICBlZGdlcyB7XG4gICAgICAgIG5vZGUge1xuICAgICAgICAgIGZpZWxkcyB7XG4gICAgICAgICAgICBkYXRlXG4gICAgICAgICAgICBzbHVnXG4gICAgICAgICAgfVxuICAgICAgICAgIGZyb250bWF0dGVyIHtcbiAgICAgICAgICAgIHRpdGxlXG4gICAgICAgICAgICBpbWFnZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgTm90WWV0UHVibGlzaGVkID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luOiAxNnB4IDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbmA7XG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  console.log(isExpanded);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width || '100%'}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1440,\n                width: '100%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","strong","_provideComponents","components","React","id","href","wrapper","MDXLayout","dayjs","require","PostTemplate","_ref","data","location","pageContext","children","tableOfContents","fields","frontmatter","excerpt","mdx","series","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","mainEntityOfPage","author","name","url","description","useEffect","undefined","document","$","each","_","item","_$$attr","attr","slice","text","replace","console","log","items","posts","setPosts","useState","allMdx","edges","filter","node","slug","sort","Math","random","draft","process","___EmotionJSX","DefaultTemplate","SEO","meta","content","property","Helmet","type","JSON","stringify","className","src","style","width","TableOfContents","Series","currentItem","NotYetPublished","PostFooter","tags","comment","comments","RelatedPost","current","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_styled","target","styles","caption","maxWidth","expandable","isExpanded","toggleExpanded","cursor","onClick","dangerouslySetInnerHTML","__html","ReactDOM","position","top","left","height","backgroundColor","borderRadius","transform","body"],"sourceRoot":""}