{"version":3,"file":"component---src-posts-2024-05-10-the-shortcut-mdx-5dae11972cb00ade48e7.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2024-05-10-the-shortcut.mdx","webpack://kciter.so/./src/components/Image/index.tsx","webpack://kciter.so/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"정교하게 구성된 생명체도 기계가 될 수 있고, 체계적으로 작동하는 소프트웨어도 기계가 될 수 있으며, 이 책에서도 언급하듯이 인간으로 구성된 소셜 플랫폼조차 기계가 될 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"지능은-인간의-전유물이-아니다\"\n  }, React.createElement(_components.a, {\n    href: \"#지능은-인간의-전유물이-아니다\"\n  }, \"지능은 인간의 전유물이 아니다\")), \"\\n\", React.createElement(_components.p, null, \"지능이란 무엇인가? 인간을 제외한 동물은 지능이 있는가? 식물은? 바이러스는 지능이 있다고 말할 수 있을까? 저자는 우주엔 지능적 주체로 가득 차 있다고 확신하고 있다. 미국 엔지니어인 \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/James_S._Albus\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"제임스 앨버스\"), \"는 지능은 \", React.createElement(_components.strong, null, \"불확실한 환경에서 적절한 행동이 성공 확률을 높일 경우 적절하게 행동할 수 있는 체계의 능력\"), \"이라 정의했다. 그런 관점에서 봤을 때 대부분의 생명체는 어떤 형태로든 자율적이면서 목적 지향적인 모습을 보여주며, 생득적인 목표와 감각 정보를 기반으로 정보에 입각한 결정을 계속해 내린다. 그들은 비록 인간처럼 문학, 수학과 같은 것에는 관심이 없지만, 모두 자신의 환경에서 찾아낸 규칙성을 이용해 목표를 더 잘 추구하고자 한다. 그럼 과연 그들에게 지능이 없다고 말할 수 있을까?\"), \"\\n\", React.createElement(_components.p, null, \"이를 \", React.createElement(_components.strong, null, \"지능형 행동\"), \"으로 인식하는 것이 인간이 지능적 주체라는 모델에서 벗어날 수 있는 출발점이다. 충격적인 발상의 전환을 뜻하는 \", React.createElement(_components.strong, null, \"코페르니쿠스적 전환\"), \"이라는 관용어가 있다. 지구가 세상의 중심이 아니듯이 지능 또한 인간 만이 가진 것이 아님을 알아야 한다. 오히려 인간은 '표준'이라기 보다는 '예외'적인 존재라고 할 수 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"기계 지능에 관한 논의에서 혼란을 초래했던 여러 근거 없는 믿음 중에서도 한 가지는 특히 음험하다. 인간이 일종의 만능형 지능을 '부여받았기' 때문에 인간의 능력을 넘어서는 정신적 능력은 자연적으로, 심지어 이론적으로도 존재하지 않는다는 것이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"인간 지능이 다른 생명 혹은 기계(외계 지능)에 비해 우월하다고 할 수 있을까? 사람이 문학적인 것, 수학적인 것들을 할 수 있다고하여 외계 지능보다 우월하다고 할 수는 없다. 사람은 QR 코드를 읽을 수도 대용량 데이터에서 패턴을 찾아낼 수도 없다. 이러한 작업은 기계는 손쉽게 할 수 있는 일이다. 동물과 비교하더라도 비슷하다. 어떤 동물은 더 빠른 반사 신경, 더 뛰어난 감각, 더 뛰어난 기억력을 보여준다. 이러한 것들은 지능이 아니다라고 무시하며 인간 지능이 더 우월하다고 말할 수는 없을 것이다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"인공지능의-세-가지-치트키\"\n  }, React.createElement(_components.a, {\n    href: \"#인공지능의-세-가지-치트키\"\n  }, \"인공지능의 세 가지 치트키\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"단순한 모델과 대규모 데이터가, 소규모 데이터 기반의 더 정교한 모델보다 우선한다.\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"조금 무섭게도 이 책의 2장 첫 번째 절의 제목은 '언어 전문가를 해고하라'다. 전문가 만든 정교한 모델이 항상 좋은 결과를 낼까? 아이러니하게도 그렇지 않다. 대규모 데이터를 이용해 단순한 모델을 학습시키는 것이 더 좋은 결과를 낼 수 있다. \", React.createElement(_components.strong, null, \"이론적 모델을 데이터에서 발견한 패턴으로 대체하는 것\"), \"은 지능형 기계에 도달하는 첫 번째 치트키다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"실제로 구할 수 없는 주석이 달린 데이터를 찾으려 하기보다는 차라리 구할 수 있는 데이터를 사용하는 게 낫다는 것이다.\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"사용자 피드백을 통한 고품질 데이터는 가치가 높지만 구하기 어렵다. 이러한 데이터를 열심히 수집하기 보다는 \", React.createElement(_components.strong, null, \"이미 있는 데이터의 의미를 재정의하여 활용하는 것이 더 효율적\"), \"이다. 이것이 지능형 기계에 도달하는 두 번째 치트키다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"사용자가 어떤 문서에 대해 답장을 보냈다는 사실과 같은, 사용자들의 암묵적 피드백 역시 활용할 수 있다.\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"어떤 데이터를 구하는 것이 좋을까? 피드백을 통한 데이터 수집은 어려운 일이기 때문에 \", React.createElement(_components.strong, null, \"사용자를 관찰하고 그 데이터를 통해 의도를 추론하는 것\"), \"이 더 효율적이다. Google Analytics와 같은 도구를 통해 사용자를 관찰하고 제품을 개선하는 것은 이제 일반적인 일이 됐다고 볼 수 있다. 마찬가지로 기계 또한 사용자 관찰 데이터(암묵적 피드백)를 통해 패턴을 찾아 추론하는 것이 가능하다. 이것이 지능형 기계에 도달하는 세 번째 치트키다.\"), \"\\n\", React.createElement(_components.p, null, \"지금의 인공지능은 모두 이러한 치트키를 통해 발전해왔다. 대용량 데이터와 패턴을 통한 기계 지능의 추론이 인공지능의 핵심이고 이러한 일들은 인간보다 기계가 훨씬 잘하는 일이다. 아이러니하게도 \", React.createElement(_components.strong, null, \"인간이 이해할 수 없는 방식으로 작동하는 것이 기계의 지능\"), \"이라 할 수 있다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"ai는-원숭이-손이-될-수-있는가\"\n  }, React.createElement(_components.a, {\n    href: \"#ai는-원숭이-손이-될-수-있는가\"\n  }, \"AI는 원숭이 손이 될 수 있는가?\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://namu.wiki/w/%EC%9B%90%EC%88%AD%EC%9D%B4%20%EC%86%90\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"원숭이 손\"), \"이라는 이야기를 아는가? 유명한 이야기라 많은 사람들이 알겠지만 원숭이 손은 세 가지 소원을 들어주지만 소원을 기괴한 방식으로 들어준다는 이야기다. 예를 들면, \\\"10억을 주세요\\\"라고 소원을 빈다면 원숭이는 10억을 주는 대신 가까운 사람의 사망 보험금을 받을 수 있게 만드는 식이다.\"), \"\\n\", React.createElement(_components.p, null, \"인공지능은 추론을 할 수 있지만 그 결과가 엉뚱할 수 있다. 잘못 학습되거나 적절한 규제로 제어되지 않은 인공지능은 위험할 수 있다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2024-05-10-the-shortcut/privacy-issue.jpeg\",\n    caption: \"ChatGPT 개인정보 유출 이슈\"\n  }), \"\\n\", React.createElement(_components.p, null, \"인공지능은 이제 인간이 이해할 수 없는 방식으로 작동한다. 대규모로 학습된 데이터에서 추론한 결과는 마치 원숭이 손처럼 인간이 원하는 결과가 아닐 수 있다. 이러한 이슈는 인공지능의 발전과 함께 더욱 중요해질 것이다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"기계가 '인간이 이해할 수 없는' 방식으로 작동하는 것은 일종의 치트키가 될 만큼 강력한 기술적 돌파구가 된 아이디어였으며 현대 인공지능 기계의 핵심적 특징이 되었다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 책의 한국어 번역명은 기계의 반칙이지만 원제는 The Shortcut이다. 직역하자면 '그 지름길'이 될 텐데 여기서 말하는 치트키가 오늘날 인공지능이 강력해질 수 있는 지름길이라고 해석할 수 있을 것 같다.\"), \"\\n\", React.createElement(_components.p, null, \"참고로 해당 리뷰에선 필자가 관심있게 읽은 부분에 대해서만 다뤘다. 이 책의 앞 부분이 지능과 기계에 대한 이야기를 다룬다면 뒷 부분은 인공지능과 어떻게 살아갈까를 다룬다고 볼 수 있다. 여기서 적은 내용 외에도 좋은 내용이 많으니 만약 관심있다면 \", React.createElement(_components.a, {\n    href: \"https://product.kyobobook.co.kr/detail/S000211513293\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"직접 읽어보는 것\"), \"을 추천한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  console.log(isExpanded);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width || '100%'}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              zIndex: 1000\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <img\n              src={src}\n              width=\"100%\"\n              style={{\n                display: 'block',\n                borderRadius: 8,\n                width: 'auto',\n                height: 'auto',\n                maxWidth: 1440,\n                maxHeight: '80vh',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            />\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","h1","a","strong","_provideComponents","components","React","id","href","rel","Image","src","caption","wrapper","MDXLayout","_ref","width","maxWidth","expandable","isExpanded","toggleExpanded","useState","console","log","___EmotionJSX","style","cursor","onClick","undefined","dangerouslySetInnerHTML","__html","ReactDOM","position","top","left","height","backgroundColor","zIndex","display","borderRadius","maxHeight","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}