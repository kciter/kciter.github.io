{"version":3,"file":"7008e230dc56cad137a8c1c3d896fa2754542f28-dc5b62d6ebbbc382421d.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2021-03-20-deep-dive-into-datetime.mdx","webpack://kciter.so/./src/components/Image/index.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource @emotion/react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"@emotion/react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    sup: \"sup\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    section: \"section\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"블로그를 시작한 김에 대충 알아보고 넘길만한 것들을 깊게 알아보기 위한 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">Deep Dive into</code>\"\n        }\n      }), \" 시리즈를 연재하기로 결정했다. 첫 주제로 어떤 걸 고를지 고민하던 중 작년에 대표님이 'Date & Time 탐구'란 주제로 사내 발표를 해주셨던 내용이 생각났다. 이번 포스트에서는 그 내용에 개인적인 호기심을 조금 더 보충하여 정리하기로 했다.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"시간은-어떻게-결정되는가\",\n      children: _jsx(_components.a, {\n        href: \"#시간은-어떻게-결정되는가\",\n        children: \"시간은 어떻게 결정되는가?\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"컴퓨터 세계에 존재하는 것들은 거의 대부분 현실에 있는 것을 전산화 한 것이라 볼 수 있다. 마찬가지로 DateTime은 \", _jsx(_components.strong, {\n        children: \"현실의 시간을 전산화\"\n      }), \" 한 것이다. 그렇기 때문에 먼저 현실에서 시간이란 개념이 어떻게 표현되는지 알아야 할 필요가 있다. 시간은 다음 여섯 가지 조건에 의해 정해진다.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"물리량\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"시간은 물리학 관점에서 봤을 때 시각과 시각 사이의 간격을 표현하는 단위를 뜻한다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 지금 이 순간(Instant)은 빅뱅(Epoch) 이후 시간이 얼마나 흘렀나?\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"위치\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"시간은 위치에 따라 다르게 표현될 수 있다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 경도 0도(UTC)가 정오일 때 동경 135도의 시각은? (경도상 위치)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 런던이 정오일 때 프랑스의 시각은? (국가, 지역)\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"천문 현상\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"지구자전속도의 불규칙성, 지구의 자전주기와 공전주기 등 천문 현상으로 인해 시간은 보정이 필요하다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 윤초, 윤달, 윤년\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"문화\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"문화에 따라 시간 표현이 다를 수 있다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 태양력, 태음력, 이슬람력, 에티오피아력 등\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"역사\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"역사적 사건에 의해 시간은 다르게 표현될 수 있다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 1582년 10월 4일의 다음 날은?\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"사회\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"사회적 제도에 의해 시간은 변할 수 있다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"ex) 일광 시간 절약제(Summer Time)\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"보다시피 우리는 꽤 많은 조건을 고려하여 시간을 표시해야 한다. 물리량과 위치, 천문 현상은 그렇다 치더라도 역사적 사건, 사회적 제도같이 규칙이 존재하지 않는 경우도 존재하기에 단순히 수학식만으론 시간을 정확히 구할 수 없다. 게다가 문화에 따라 시간을 표현하는 방법이 다를 수 있다는 점도 골치아프다.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"그렇기에 통일된 시간 표기법을 위한 \", _jsx(_components.a, {\n        href: \"https://ko.wikipedia.org/wiki/%ED%98%91%EC%A0%95_%EC%84%B8%EA%B3%84%EC%8B%9C\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"협정 세계시\"\n      }), \"가 탄생했다. UTC는 \", _jsx(_components.a, {\n        href: \"https://ko.wikipedia.org/wiki/%EA%B5%AD%EC%A0%9C%EC%9B%90%EC%9E%90%EC%8B%9C\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"원자 시계\"\n      }), \"와 윤초 보정을 기반으로 표준화한 시각으로 모든 시간대는 UTC+0을 기준으로 환산한다. 예를 들어, 대한민국의 시간은 UTC 시간에 +9를 더한 시간으로 영국 시간이 오전 1시라면 대한민국은 오전 10시\", _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-1\",\n          id: \"user-content-fnref-1\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"1\"\n        })\n      }), \"가 된다. UTC는 \", _jsx(_components.a, {\n        href: \"https://ko.wikipedia.org/wiki/ISO_8601\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"ISO 8601\"\n      }), \"을 따라 다음과 같은 표기법을 따른다.\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">// UTC+0 기준 2021년 3월 20일 9시\\n2021-03-20T09:00:00.000Z\\n\\n// UTC+9 (한국 시간) 기준 2021년 3월 20일 9시\\n2021-03-20T09:00:00.000+09:00</code></pre></div>\"\n      }\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"가운데 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">T</code>\"\n        }\n      }), \"는 Time을 뜻하고 시간 뒤 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">Z</code>\"\n        }\n      }), \"는 Zulu time\", _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-2\",\n          id: \"user-content-fnref-2\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"2\"\n        })\n      }), \" 을 뜻한다.\"]\n    }), \"\\n\", _jsx(Image, {\n      src: \"/images/2021-03-20-deep-dive-into-datetime/utc.png\",\n      caption: \"국가마다 시간대가 다르다\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고로 국가, 지역마다 경도상 시간과 국가 시간이 다를 수 있다. 아이슬란드의 경우 경도상 위치는 UTC-1이지만 UTC+0을 사용하고 있다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴퓨터가-시간을-표현하는-방법\",\n      children: _jsx(_components.a, {\n        href: \"#컴퓨터가-시간을-표현하는-방법\",\n        children: \"컴퓨터가 시간을 표현하는 방법\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"컴퓨터는 시간을 표시하기 위해 하드웨어의 시스템 클럭을 이용한다. 주로 특정 시간(Epoch)를 기준으로 시스템 클럭의 틱을 세는 것으로 구현되고 이를 \", _jsx(_components.strong, {\n        children: \"시스템 시간\"\n      }), \"이라고 부른다. 그리고 시스템 시간을 값으로 표현한 것을 \", _jsx(_components.strong, {\n        children: \"Timestamp\"\n      }), \"라고 부른다. 주의할 점으로 Timestamp는 운영체제마다 기준 시간과 단위가 다를 수 있다. 대표적으로 유닉스에선 1970년 1월 1일 00:00:00이 기준 시간이며 초 단위로 시간이 증가하지만 윈도우즈는 1601년 1월 1일 00:00:00이 기준 시간이며 100 나노초 단위로 증가한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"유닉스 계열 운영체제에서 시간을 표시하는 방법을 \", _jsx(_components.a, {\n        href: \"https://ko.wikipedia.org/wiki/%EC%9C%A0%EB%8B%89%EC%8A%A4_%EC%8B%9C%EA%B0%84\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Unix time\"\n      }), \"이라 부른다. 내용을 보면 몇 가지 의문이 생길 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"1970년 이전 시간은 어떻게 표현할까?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"왜 하필 '1970년 1월 1일'일까?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"현재 시간을 어떻게 알지?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"시간대는 어떻게 고려할까?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"충분히 의문을 품을 수 있는 내용들이다. 하나씩 파해쳐보자.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"1970년-이전-시간은-어떻게-표현할까\",\n      children: _jsx(_components.a, {\n        href: \"#1970년-이전-시간은-어떻게-표현할까\",\n        children: \"1970년 이전 시간은 어떻게 표현할까?\"\n      })\n    }), \"\\n\", _jsx(Image, {\n      src: \"/images/2021-03-20-deep-dive-into-datetime/negative-timestamp.png\",\n      caption: \"-1616254565은 1918년 10월 14일이다\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"이 의문은 굉장히 쉽게 풀린다. 답은 '음수'를 사용하는 것이다. \", _jsx(_components.a, {\n        href: \"https://www.epochconverter.com/\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"EpochConverter\"\n      }), \"라는 사이트에서 음수 값을 넣어 확인해보자.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"왜-하필-1970년-1월-1일일까\",\n      children: _jsx(_components.a, {\n        href: \"#왜-하필-1970년-1월-1일일까\",\n        children: \"왜 하필 '1970년 1월 1일'일까?\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"사실 필자는 이유를 알기위해 많은 리서치를 했지만 딱히 명쾌한 이유은 없었다. 단지 \", _jsx(_components.a, {\n        href: \"https://stackoverflow.com/questions/24472979/what-is-so-special-about-unix-time/24472994#24472994\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Stack Overflow 글 하나\"\n      }), \"를 통해 유닉스를 개발한 데니스 리치의 인터뷰 기사를 하나 발견했는데 이를 통해 알아낸 이유는 다음과 같다.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"\\\"At the time we didn't have tapes and we had a couple of file-systems running and we kept changing the origin of time. So finally we said, 'Let's pick one thing that's not going to overflow for a while.' \", _jsx(_components.strong, {\n          children: \"1970 seemed to be as good as any.\"\n        }), \"\\\" - Dennis Ritchie\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"핵심만 해석하면 \\\"그냥 1970년이 좋아 보였다\\\"로 요약할 수 있다. 즉, 정리하자면 1970년 1월 1일인 이유에 별다른 이유는 없다.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"현재-시간을-어떻게-알지\",\n      children: _jsx(_components.a, {\n        href: \"#현재-시간을-어떻게-알지\",\n        children: \"현재 시간을 어떻게 알지?\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"시스템 시간은 \", _jsx(_components.a, {\n        href: \"https://www.ntp.org/\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"네트워크 타임 프로토콜(NTP)\"\n      }), \"를 통해 현재 시간을 동기화할 수 있다. 당연하지만 네트워크 연결이 되어야하며 UDP 123번 포트를 통해 통신한다. NTP 서버는 \", _jsx(_components.a, {\n        href: \"https://gist.github.com/mutin-sa/eea1c396b1e610a2da1e5550d94b0453\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"여러 곳\"\n      }), \"이 존재하며 이 서버가 기준 시간을 만들어낸다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NTP 서버는 트리 구조로 상위 NTP 서버에서 하위 NTP 서버로 동기화된다. 여기서 계층을 \", _jsx(_components.strong, {\n        children: \"Stratum\"\n      }), \"으로 표현하는데 가장 최상위에 해당하는 Stratum 0은 Primary Reference Clock(PRC)이라고도 부르며 정교한 원자 시계를 사용하기에 매우 정밀한 시간을 만들 수 있다. 다음 계층인 Stratum 1은 물리적으로 Stratum 0과 동기화되며 기준 시간을 만드는 1차 타임 서버가 된다. 이후 Stratum 2 ~ 15에 해당하는 서버들은 상위 Stratum과 동기화되며 낮은 계층일수록 정밀도가 떨어진다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NTP 클라이언트는 NTP 서버를 주기적으로 Polling 하는데 클라이언트는 서버에서 받아온 데이터를 보정해야 한다. 이를 해결하기 위한 \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Network_Time_Protocol#Clock_synchronization_algorithm\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"식\"\n      }), \"은 다음과 같다.\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">// 왕복 지연(d)와 클럭 오프셋(c)을 계산한다.</span>\\nd <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>t2 <span class=\\\"token operator\\\">-</span> t3<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token punctuation\\\">(</span>t1 <span class=\\\"token operator\\\">-</span> t0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nc <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>t2 <span class=\\\"token operator\\\">-</span> t3<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span>t1 <span class=\\\"token operator\\\">-</span> t0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// t0는 클라이언트가 서버로 요청 보낸 시점의 Timestamp다.</span>\\n<span class=\\\"token comment\\\">// t1은 서버가 클라이언트에게 요청 받은시점의 Timestamp다.</span>\\n<span class=\\\"token comment\\\">// t2는 서버가 클라이언트에게 응답하는 시점의 Timestamp다.</span>\\n<span class=\\\"token comment\\\">// t3는 클라이언트가 서버로부터 응답받은 시점의 Timestamp다.</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"위 식을 통해 클라이언트는 네트워크 지연 시간과 응답 받은 시점의 클럭 오프셋을 보정할 수 있다. 이때 통신 왕복 시간이 대칭적\", _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-3\",\n          id: \"user-content-fnref-3\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"3\"\n        })\n      }), \"일 때 정확한 동기화가 이루어진다. 만약 통신 왕복 시간이 대칭적이지 않은 경우엔 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">송수신 시간의 차 / 2</code>\"\n        }\n      }), \"만큼 \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Observational_error\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Systematic bias\"\n      }), \"가 발생한다고 한다. 혹시라도 해당 로직에 대한 구현이 궁금하다면 \", _jsx(_components.a, {\n        href: \"https://github.com/ntp-project/ntp/blob/master-no-authorname/ntpdate/ntpdate.c\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"링크\"\n      }), \"를 확인해보자.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"참고로 우리가 주로 사용하는 리눅스에선 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">rdate</code>\"\n        }\n      }), \"를 통해 시간 동기화를 할 수 있다. 요즘은 거의 대부분 클라우드 시스템을 사용하기에 직접 설정할 일은 거의 없긴하다.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"time-zone\",\n      children: _jsx(_components.a, {\n        href: \"#time-zone\",\n        children: \"Time Zone\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"그렇다면 국가, 지역에 따른 시간 표시는 어떻게 할까? 앞서 설명했듯이 국가, 지역은 경도를 따르지 않고 시간대를 지정한 경우도 있다. 거기에 프랑스\", _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-4\",\n          id: \"user-content-fnref-4\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"4\"\n        })\n      }), \"나 러시아, 미국처럼 시간대가 여러 개거나 정책에 따라 \", _jsx(_components.a, {\n        href: \"https://ko.wikipedia.org/wiki/%ED%8F%89%EC%96%91%EC%8B%9C%EA%B0%84\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"바뀔 수 있기에\"\n      }), \" 초기 설정만으론 문제가 생길 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"이를 해결하기 위해 멋진 사람들이 국가, 지역별 시간대 설정을 위한 \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Tz_database\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"tz database\"\n      }), \"라는 데이터베이스를 구축했다. 우리는 tz database를 통해 세계 각국의 Time Zone 데이터를 받아와서 국가, 지역별 시간을 설정할 수 있다. Time Zone은 다음처럼 표기할 수 있다.\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">// 서울</span>\\nAsia<span class=\\\"token operator\\\">/</span>Seoul\\n\\n<span class=\\\"token comment\\\">// 뉴욕</span>\\nAmerica<span class=\\\"token operator\\\">/</span>New_York\\n\\n<span class=\\\"token comment\\\">// 파리</span>\\nEurope<span class=\\\"token operator\\\">/</span>Paris</code></pre></div>\"\n      }\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"보다시피 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">대륙/도시</code>\"\n        }\n      }), \" 형태를 따른다. 이 값을 Zone Id라고 부른다. 해당 국가, 지역의 정확한 시간을 표기하기 위해선 UTC 시간과 Zone Id를 저장해두고 클라이언트에서 계산하는 것이 가장 좋은 방법이다.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"시간을-어떤-기준으로-사용해야-하는가\",\n      children: _jsx(_components.a, {\n        href: \"#시간을-어떤-기준으로-사용해야-하는가\",\n        children: \"시간을 어떤 기준으로 사용해야 하는가?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"국제화를 고려하지 않아도되는 서비스의 경우 모든 것을 한국 기준으로 시간을 기록한다면 크게 문제될 일은 없다. 하지만 우리가 만약 글로벌 서비스를 준비해야 한다면 가장 중요한 것은 시간이라고 할 수 있다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"\\\"그냥 전부 Time Zone쓰면 되는 것 아닌가요?\\\"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그렇지 않다. 우리는 서비스에서 사용되는 시간을 용도에 맞춰서 기록할 필요가 있다. 하나씩 예시를 살펴보자.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"순수한-시간\",\n      children: _jsx(_components.a, {\n        href: \"#순수한-시간\",\n        children: \"순수한 시간\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"뜬금없지만 필자의 생일은 1월 26일이다. 갑자기 생일 이야기를 한 것은 예시에 적합하기 때문이다. 보다시피 보통 생일은 시간대를 고려하지 않고 말한다. 만약 필자가 \", _jsx(\"strong\", {\n        children: \"\\\"내가 한국에서 1월 26일에 태어났지만 미국 시간으로 따지면 1월 25일에 태어났으니 미국 생일은 1월 25일이야~\\\"\"\n      }), \"라고 말하고 다닌다면 많은 사람들이 정말 이상한 사람이라고 생각할 것이다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이처럼 시간대와 지역, 문화, 사회를 고려하지 않고 순수한 시간과 날짜를 사용해야하는 경우가 있다. 좀 더 예를 들어보자면 다음과 같은 사례에 쓰일 수 있다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"생일\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"기업 설립일\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"기념일\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"국경일\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"혹은 기록을 위해 시간을 사용하지 않는 경우에도 순수한 시간을 사용할 때가 있다. 보통 벤치마킹을 하기 위해 시간을 사용하거나 유니크한 값을 만들어내기 위해 사용하기도 한다. 혹은 랜덤 값 SEED 용도로 사용될 수도 있다.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"utc\",\n      children: _jsx(_components.a, {\n        href: \"#utc\",\n        children: \"UTC\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"역사, 사회, 문화에 대한 맥락 없이 \", _jsx(\"strong\", {\n        children: \"'사건이 발생한 시각'\"\n      }), \"만을 고려할 땐 UTC를 사용하여 시간을 기록하는 것이 좋다. 가장 대표적인 예시로 \", _jsx(_components.strong, {\n        children: \"로깅\"\n      }), \"을 들 수 있다. 로그는 분산되어 저장될 수 있기에 발생한 순서를 쉽게 알기 위해선 UTC처럼 기준이 되는 시간대를 정하는 것이 좋다. 만약 로그가 기록된 시간에 타임존이 적용되어 발생한 곳 마다 다르게 시간이 적용된다면 큰 혼란이 생길 수 있다. 마찬가지로 자주 사용하는 \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">createdAt</code>\"\n        }\n      }), \", \", _jsx(_components.span, {\n        dangerouslySetInnerHTML: {\n          __html: \"<code class=\\\"language-text\\\">updatedAt</code>\"\n        }\n      }), \"도 UTC로 기록하는 것이 좋다.\"]\n    }), \"\\n\", _jsx(Image, {\n      src: \"/images/2021-03-20-deep-dive-into-datetime/stock-chart.png\",\n      caption: \"주식 차트는 대표적인 시계열 데이터다\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"또 다른 사용 예시로 시계열 데이터를 들 수 있다. 시계열 데이터의 경우 시간에 종속된 연속적인 데이터를 말하는데 UTC처럼 시간대가 정해진 상태로 기록된게 아니라면 언제 저장된 시간인지 알 수 없어 잘못된 분석으로 이어질 수 있다. 추가로 UTC는 다음과 같은 사례에 쓰일 수 있다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"로그\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"감사\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"시계열 데이터\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.span, {\n          dangerouslySetInnerHTML: {\n            __html: \"<code class=\\\"language-text\\\">createdAt</code>\"\n          }\n        }), \", \", _jsx(_components.span, {\n          dangerouslySetInnerHTML: {\n            __html: \"<code class=\\\"language-text\\\">updatedAt</code>\"\n          }\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"time-zone이-적용된-시간\",\n      children: _jsx(_components.a, {\n        href: \"#time-zone이-적용된-시간\",\n        children: \"Time Zone이 적용된 시간\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"반면 사용자가 이용한 시각을 정확히 알기위해 Time Zone을 사용해야 할 떄도 있다. 예를 들면, 사용자가 상품을 결제했을 때 UTC 시간만 기록했다면 사용자가 정확히 몇시 몇분 몇초에 주문했는지 알 수가 없다. 이때 정확한 시각을 알기 위해선 데이터베이스에 Zone Id도 함께 기록해야 한다. 또한, UI에 표시되는 시간을 사용자 기준으로 보여주기 위해서도 Time Zone은 필요하다.\"\n    }), \"\\n\", _jsx(Image, {\n      src: \"/images/2021-03-20-deep-dive-into-datetime/facebook.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"예를 들어, 같은 페이스북 게시물을 보더라도 사는 나라가 다르다면 작성한 시간이 다를 수 있다. 필자가 3월 15일 오후 12시 31분에 작성한 게시물은 영국 사람이 보기엔 새벽 3시 31분에 작성한 것으로 보일 것이고 하와이에 사는 사람이 보기엔 3월 14일 오후 5시 31분에 작성한 것으로 보일 것이다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그렇기 때문에 글로벌 서비스를 준비한다면 사용자 혹은 사용자가 포함되는 그룹 데이터에 Zone Id 정보를 추가해야 한다. 추가로 Time Zone이 적용된 시간은 다음과 같은 사례에 쓰일 수 있다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"결제 시각\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"푸시 알림 시각\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"UI 시각 표시\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"캘린더\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"UI에 내려주는 JSON 데이터 예시는 다음과 같다.\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">\\\"userId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string-property property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"이선협\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string-property property\\\">\\\"zoneId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Asia/Seoul\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// Time Zone을 위한 Zone Id</span>\\n  <span class=\\\"token string-property property\\\">\\\"birthdate\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1994-01-26\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 순수한 시간</span>\\n  <span class=\\\"token string-property property\\\">\\\"createdAt\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"2021-03-20T04:59:25Z\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 기준 시간 UTC</span>\\n  <span class=\\\"token string-property property\\\">\\\"updatedAt\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"2021-03-20T05:12:38Z\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string-property property\\\">\\\"posts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string-property property\\\">\\\"postId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string-property property\\\">\\\"publishedAt\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"2021-03-20T06:00:00Z\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 기준 시간 오전 6시에 발행됨</span>\\n      <span class=\\\"token comment\\\">// publishedAt은 user의 zondId에 따라 다르게 보일 수 있다.</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"마치며\",\n      children: _jsx(_components.a, {\n        href: \"#마치며\",\n        children: \"마치며\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"사실 가볍게 작성하려한 글이지만 \", _jsx(_components.strong, {\n        children: \"Deep Dive into\"\n      }), \"라는 주제답게 파다 보니 생각보다 알아야할 내용들이 많았다. 그 모든 내용을 글에 담으려면 끝이 없을 것 같아 어느정도 자른 부분도 꽤 있다. 고작 DateTime을 이해하기 위해 이렇게까지 공부해야 할까라는 의문도 들었고 자료를 조사하고 글을 작성하는 시간을 합쳐 8시간 정도 걸려 할 일이 많음에도 꽤 시간을 많이 빼앗겼다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"하지만 인생이란 어떻게 될지 아무도 모르는 거다. 오늘 시간에 대해 공부한 덕분에 훗날 시스템에 치명적인 \", _jsx(_components.strong, {\n        children: \"0.1%의 버그\"\n      }), \"를 수정할 수 있다면 얼마나 멋진 일일까. 우리 모두 매 순간을 소중히 여기는 멋진 개발자가 되기로 하자.\"]\n    }), \"\\n\", _jsxs(_components.section, {\n      \"data-footnotes\": true,\n      className: \"footnotes\",\n      children: [_jsx(_components.h2, {\n        className: \"sr-only\",\n        id: \"footnote-label\",\n        children: _jsx(_components.a, {\n          href: \"#footnote-label\",\n          children: \"Footnotes\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-1\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"참고로 한국 표준 시간은 KST라고 부른다 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-1\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-2\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"UTC, GMT, Zulu time 모두 같은 시간대를 나타낸다 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-2\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-3\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"송수신 시간이 같을 때 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-3\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-4\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"프랑스는 무려 12개의 시간대를 가지고 있다 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-4\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default' }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","a","strong","ul","li","sup","h3","blockquote","section","ol","_provideComponents","components","_jsxs","_Fragment","children","_jsx","dangerouslySetInnerHTML","__html","id","href","rel","Image","src","caption","className","wrapper","MDXLayout","_ref","width","expandable","isExpanded","toggleExpanded","useState","style","cursor","onClick","undefined","ReactDOM","position","top","left","height","backgroundColor","borderRadius","maxWidth","transform","document","body"],"sourceRoot":""}