{"version":3,"file":"component---src-posts-2024-09-09-encrypted-share-vault-system-mdx-e0a25afd925671cd13f8.js","mappings":"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","sources":["webpack://kciter.so/./src/posts/2024-09-09-encrypted-share-vault-system.mdx","webpack://kciter.so/./src/components/Image/index.tsx","webpack://kciter.so/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h1: \"h1\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이전에 \", React.createElement(_components.a, {\n    href: \"/posts/encrypted-vault-system\"\n  }, \"비밀 관리를 위한 금고 시스템\"), \"을 구현하여 여러 비밀을 안전하게 관리하는 방법을 알아보았다. 하지만 마스터 패스워드를 공유하지 않는다면 \", React.createElement(_components.strong, null, \"개인만 이용할 수 있다는 한계\"), \"가 존재한다. 그리고 당연히 마스터 패스워드는 어딘가 노출되어선 안된다.\"), \"\\n\", React.createElement(Image, {\n    src: \"/images/2024-09-09-encrypted-share-vault-system/1password-groups.png\",\n    caption: \"그룹에 따라 접근 가능한 금고를 제한할 수 있다\"\n  }), \"\\n\", React.createElement(_components.p, null, \"협업을 하다보면 팀 내부에서 공유하는 비밀이 생기기 마련이다. 비밀은 팀원 간에 공통으로 사용하는 서비스의 비밀번호일 수도 있고 내부 개발, 운영 도구에 대한 시크릿 키일 수도 있다. \", React.createElement(_components.a, {\n    href: \"https://1password.com/ko\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"1Password\"), \"나 \", React.createElement(_components.a, {\n    href: \"https://nordpass.com/homepage/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"NodePass\"), \"와 같은 서비스는 비용을 지불하면 팀 내에서 비밀을 공유할 수 있는 기능을 제공한다.\"), \"\\n\", React.createElement(_components.p, null, \"이번 글에서는 상용 비밀 공유 서비스처럼 비밀을 안전하게 공유할 수 있는 방법을 알아보고 이를 구현해볼 것이다. 참고로 \", React.createElement(_components.a, {\n    href: \"/posts/encrypted-vault-system\"\n  }, \"이전 글\"), \"을 읽었다고 가정하고 진행하므로 이전 글을 먼저 읽어보는 것을 추천한다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"시나리오\"\n  }, React.createElement(_components.a, {\n    href: \"#시나리오\"\n  }, \"시나리오\")), \"\\n\", React.createElement(_components.p, null, \"비밀 관리 시스템을 이용하여 가족 간에 비밀을 공유한다고 생각해보자. 가장 간단한 방법은 마스터 패스워드를 공유하는 것이다. 하지만 마스터 패스워드를 \", React.createElement(_components.strong, null, \"아는 사람이 늘어날수록 유출될 가능성이 높아지고 이는 보약 취약점\"), \"이 된다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"종단간-암호화\"\n  }, React.createElement(_components.a, {\n    href: \"#종단간-암호화\"\n  }, \"종단간 암호화\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"영지식-증명\"\n  }, React.createElement(_components.a, {\n    href: \"#영지식-증명\"\n  }, \"영지식 증명\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"비대칭-암호화-한-스푼\"\n  }, React.createElement(_components.a, {\n    href: \"#비대칭-암호화-한-스푼\"\n  }, \"비대칭 암호화 한 스푼\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"공유-금고\"\n  }, React.createElement(_components.a, {\n    href: \"#공유-금고\"\n  }, \"공유 금고\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"마스터-패스워드\"\n  }, React.createElement(_components.a, {\n    href: \"#마스터-패스워드\"\n  }, \"마스터 패스워드\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"권한-설정\"\n  }, React.createElement(_components.a, {\n    href: \"#권한-설정\"\n  }, \"권한 설정\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"비밀-저장하기\"\n  }, React.createElement(_components.a, {\n    href: \"#비밀-저장하기\"\n  }, \"비밀 저장하기\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"중간자-공격\"\n  }, React.createElement(_components.a, {\n    href: \"#중간자-공격\"\n  }, \"중간자 공격\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"샤미르의-비밀-공유\"\n  }, React.createElement(_components.a, {\n    href: \"#샤미르의-비밀-공유\"\n  }, \"샤미르의 비밀 공유\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"마치며\"\n  }, React.createElement(_components.a, {\n    href: \"#마치며\"\n  }, \"마치며\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  maxWidth?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, maxWidth, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default', maxWidth }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","strong","h1","h2","_provideComponents","components","React","href","Image","src","caption","rel","id","wrapper","MDXLayout","_ref","width","maxWidth","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","dangerouslySetInnerHTML","__html","ReactDOM","position","top","left","height","backgroundColor","borderRadius","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}